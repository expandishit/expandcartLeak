

<style type="text/css">
    /* typeahead styling */
    .tt-hint {
        background: #FFF !important;
    }

    .tt-dropdown-menu {
        min-width: 300px;
        max-height: 365px;
        overflow: scroll;
        margin: 2px;
        padding: 5px 0;
        background-color: #fff;
        border: 1px solid #ccc;
        border: 1px solid rgba(0, 0, 0, .2);
        *border-right-width: 2px;
        *border-bottom-width: 2px;
        border-radius: 6px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
        background-clip: padding-box;
    }

    .tt-suggestion {
        display: block;
        padding: 3px 20px;
    }

    .tt-suggestion.tt-is-under-cursor {
        color: #fff;
        background-color: #0081c2;
        background-image: linear-gradient(to bottom, #0088cc, #0077b3);
    }

    .tt-suggestion.tt-is-under-cursor a {
        color: #fff;
    }

    .tt-suggestion p {
        margin: 0;
    }

    /* compatibility styling */
    a {
        cursor: pointer;
    }

    .btn-danger, .btn-primary {
        color: #FFF !important;
    }

    .btn-default {
        color: #333 !important;
    }

    .btn-default:hover {
        background: #F8F8F8 !important;
    }

    .btn-link {
        color: #428bca !important;
    }

    #menu > ul li ul {
        margin-top: -2px;
        overflow: visible !important;
    }

    #menu > ul li ul a {
        height: auto;
    }

    #menu > ul li ul ul {
        margin-left: 148px;
    }

    .alert-success {
        color: #484;
    }

    .page-header {
        border-bottom: 1px solid #EEE;
        margin: 15px 0;
    }

    .page-header h1, .page-header .breadcrumb {
        display: inline-block;
    }

    .panel-title {
        font-size: 20px;
    }

    .panel-title i, .modal-footer a {
        color: #333;
    }

    .form-control:not(.summernote) {
        display: inline-block !important;
    }

    input.form-control, select.form-control {
        z-index: 0 !important;
    }

    hr {
        margin: 10px 0;
    }

    #footer {
        margin-top: 0 !important;
    }

    #toolbar-box {
        display: none;
    }

    /* padding styling */
    .pad-top-sm {
        margin-top: 5px;
    }

    .pad-top {
        margin-top: 10px;
    }

    .pad-top-lg {
        margin-top: 20px;
    }

    .pad-right-sm {
        margin-right: 5px;
    }

    .pad-right {
        margin-right: 10px;
    }

    .pad-right-lg {
        margin-right: 20px;
    }

    .pad-bottom-sm {
        margin-bottom: 5px;
    }

    .pad-bottom {
        margin-bottom: 10px;
    }

    .pad-bottom-lg {
        margin-bottom: 20px;
    }

    .pad-left-sm {
        margin-left: 5px;
    }

    .pad-left {
        margin-left: 10px;
    }

    .pad-left-lg {
        margin-left: 20px;
    }

    /* extension styling */
    .saving {
        background-color: #fffbe6 !important;
        border-color: #c09853 !important;
        color: #c09853 !important;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075) !important;
    }

    .save-error {
        background-color: #ffeeee !important;
        border-color: #b94a48 !important;
        color: #b94a48 !important;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075) !important;
    }

    .modal-dialog {
        padding-top: 10%;
    }

    .tooltip-inner {
        font-size: 12px;
        padding: 8px;
        width: 200px;
    }

    .btn + .tooltip .tooltip-inner {
        width: auto;
    }

    .help-text {
        color: #666;
        font-size: 11px;
        font-style: italic;
        padding-top: 2px;
    }

    .well-sm {
        font-size: 18px;
        line-height: 28px;
        padding: 7px 15px 8px;
    }

    .well-sm div {
        margin-top: -3px;
    }

    .setting, .input-group, .rule {
        margin-bottom: 5px;
    }

    .input-group-addon img {
        margin-top: -3px;
    }

    input, select, textarea, .input-group-addon {
        padding: 5px 10px !important;
        vertical-align: middle !important;
        width: auto !important;
    }

    .rtl input, select, textarea, .input-group-addon {
        padding: 0px 10px !important;
    }

    .input-group-addon {
        width: 37px !important;
    }

    label, input[type="button"], input[type="checkbox"], input[type="file"], input[type="radio"] {
        cursor: pointer;
        font-weight: normal;
    }

    .autosave label {
        color: #333;
        display: block;
    }

    .col-sm-8 label {
        border: 1px solid #FFF;
        padding: 1px 3px;
    }

    .col-sm-8 label:hover {
        border: 1px dashed #CCC;
    }

    .col-sm-8 input[type="text"], .col-sm-8 textarea {
        width: 400px !important;
    }

    input[type="text"] {
        width: 200px !important;
    }

    input[type="checkbox"] {
        margin-top: -2px;
        width: 15px !important;
        height: 15px !important;
        padding: 0 10px 10px 0 !important;
        line-height: 3.3;
    }

    input[type="file"] {
        border: 1px dashed #CCC;
        display: inline-block;
        padding: 3px !important;
        width: 350px !important;
    }

    input[type="radio"] {
        padding: 0 10px 10px 0 !important;
        width: 15px !important;
    }

    input[type="text"].short {
        width: 42px !important;
    }

    textarea {
        font-size: 11px !important;
        height: 70%;
        min-height: 65px !important;
        padding: 3px 8px !important;
    }

    a[data-toggle="image"] {
        vertical-align: top;
    }

    .note-toolbar .btn {
        font-size: 11px !important;
    }

    .note-codable {
        width: 100% !important;
    }

    code {
        font-family: monospace;
    }

    .btn {
        outline: none !important;
    / / padding: 8 px 13 px !important;
    }

    .btn-xs {
        font-size: 10.5px;
        padding: 1px 5px !important;
    }

    .btn-success {
        background-color: #5cb85c !important;
        border-color: #4cae4c !important;
    }

    .btn-success:hover, .btn-success:focus, .btn-success:active {
        background-color: #449d44 !important;
        border-color: #398439 !important;
    }
    .bottom-cancel-button{
        display:none !important;
    }

    .expand {
    {% if saved['display'] or saved['display'] == 'expanded'  %} display: none;
    {% endif %} margin-bottom: 5px;
    }

    .expand i, .expand + div i {
        position: relative;
        left: 1px;
    }

    .table {
        margin-top: -15px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .table th {
        white-space: nowrap;
        //padding-right: 10px;
     padding: 12px 20px !important;
    line-height: 1.5384616 !important;
    }

    .table tbody td:not(:last-child) {
        padding-right: 10px;
    }

    .table td {
        padding-top: 10px !important;
        vertical-align: top !important;
    }
    .panel {
    margin-bottom: 20px;
    color: #333333;
    border: 0;
     box-shadow: 0 0 4px #555555;
}
.panel-body {
    position: relative;
    padding: 20px 20px;
}

    .collapsed {
        cursor: pointer;
        height: 35px;
        overflow: hidden;
    }

    .rule {
        font-size: 11px;
    }

    .rule select, .rule input {
        display: inline-block;
        font-size: inherit;
        padding: 0 2px !important;
        height: 2.5em;
    }

    .rule input[type="text"] {
        width: auto !important;
    }

    .collapsed .rule {
        padding-bottom: 8px;
    }

    .typeahead-block {
        display: inline-block;
        vertical-align: top;
    }

    .product-group-scrollbox {
        background: #FFF;
        border: 1px solid #DDD;
        height: 200px;
        width: 400px;
        margin: 1px 0 5px;
        overflow: scroll;
        padding: 5px;
    }

    .product-group-scrollbox div {
        line-height: 25px;
    }

    .product-group-scrollbox div:hover {
        cursor: default;
        background: #EEE;
    }
    .shipping-activation-tabs {
        width: 100% !important;
    }
    .nav-tabs.nav-justified > li > a {
    color: black;
    font-weight: bold;
    text-decoration: none;
    font-size: 15px;
    border: transparent;
    }
</style>

{% if rule_options is not empty %}
    <div id="rule-templates" style="display: none;">

        {% set ruleSelectorTemplate %}

            <a class="btn btn-danger btn-xs" data-help="{{ lang('button_delete') }}"
                onclick="removeRow($(this).parent())"><i class="fa fa-trash-alt fa-lg"></i></a>
            <select class="notSelect form-control" name="##_type" data-help='{{ lang("help_rules") }}'
                    data-prefix="##">
                <option class="nosave">{{ lang('text_choose_rule_type') }}</option>
                {% for optgroup,options in rule_options %} 
                    {% if options is not empty %}
                        <optgroup label="{{ lang('text_' ~ optgroup) }}">
                            {% for option in options %}
                                <option value="{{ option }}">{{ lang('text_' ~ option) }}</option>
                            {% endfor %}
                        </optgroup>
                    {% endif %}
                {% endfor %}
            </select>
        {% endset %}
        <div id="rule-selector-html">
            {{ ruleSelectorTemplate }}
        </div>
        {% set ruleOptionTemplates = [] %}

        {% for rule_group in rule_options %}
            {% for rule_option in rule_group %}
                {% set ruleOptionTemplate %}

                    <span class="{{ rule_option }}-html">
                    

            {% if rule_option == 'adjust' %}
                <select class="notSelect form-control" name="##_comparison"
                        data-help="{{ lang('help_adjust_comparison') }}">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <optgroup label="{{ lang('text_charge_adjustment') }}">
                        <option data-setting="comparison" value="charge">{{ lang('text_final_charge') }}</option>
                    </optgroup>
                    {% if rule_options['cart_criteria'] is not empty %}
                        <optgroup label="{{ lang('text_cart' ~ ' ' ~ lang('text_adjustments')) }}">
                    {% for criterion in rule_options['cart_criteria'] %}
                        <option data-setting="comparison" value="cart_{{ criterion }}">
                            {{ lang('text_cart') ~ ' ' ~ _context['text_' ~ criterion] }}
                        </option>
                    {% endfor %}
                        </optgroup>
                        <optgroup label="{{ lang('text_item') ~ ' ' ~ lang('text_adjustments') }}">
                            {% for criterion in rule_options['cart_criteria'] %}
                                <option data-setting="comparison" value="item_{{ criterion }}">
                                {{ lang('text_item') ~ ' ' ~ _context['text_' ~ criterion] }}
                            </option>
                            {% endfor %}
                        </optgroup>
                    {% endif %}
                </select>
                <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                        data-help='{{ lang('help_adjust') }}'/>
            {% endif %}

                        {% if rule_option == 'min' or rule_option == 'max' %}
                            =
                            <input data-setting="comparison" value="" type="hidden" class="form-control"
                                    name="##_comparison"/>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help="{{ lang('help_' ~ rule_option) }}"/>
                        {% endif %}

                        {% if rule_option == 'cumulative' %}
                            <input data-setting="comparison" value="" type="hidden" class="form-control"
                                    name="##_comparison"/>
                            <input data-setting="value" value="" type="hidden" class="form-control"
                                    name="##_value"/>
                            <span data-help="{{ lang('help_cumulative') }}">
                    {{ lang('text_enabled_successive_brackets') }}
                </span>
                        {% endif %}

                        {% if rule_option == 'round' %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="nearest">{{ lang('text_to_the_nearest') }}</option>
                    <option data-setting="comparison" value="up">{{ lang('text_up_to_the_nearest') }}</option>
                    <option data-setting="comparison" value="down">{{ lang('text_down_to_the_nearest') }}</option>
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help='{{ lang("help_round") }}'/>
                        {% endif %}

                        {% if rule_option == 'setting_override' %}
                            <select class="notSelect form-control" name="##_comparison">
                <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                                {% set groupcode = 'group' %}
                                {% set optgroup = setting_override_array[0][groupcode] %}
                                <optgroup label="{{ setting_override_array[0][groupcode] }}">
                    {% for setting_override in setting_override_array %}
                                    {% if setting_override[groupcode] != optgroup %}
                                </optgroup>
                                <optgroup label="{{ setting_override[groupcode] }}">
                                    {% set optgroup = setting_override[groupcode] %}
                                    {% endif %}
                                    <option data-setting="comparison"
                                            value="{{ setting_override['key'] }}"
                                            title="{{ setting_override['value'] }}">
                                    {{ setting_override['key'] }}
                                </option>
                                    {% endfor %}
                    </optgroup>
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help="{{ lang('help_setting_override') }}"/>
                        {% endif %}

                        {% if rule_option == 'tax_class' or rule_option == 'total_value' %}
                            =
                            <input data-setting="comparison" value="" type="hidden" class="form-control"
                                    name="##_comparison"/>
                            <select class="notSelect form-control" name="##_value"
                                    data-help="{{ lang('help_' ~ rule_option) }}">
                    <option data-setting="value" value="">{{ lang('standard_select') }}</option>
                                {% for k,v in _context[rule_option ~ '_array'] %}
                                    <option data-setting="value" value="{{ k }}">{{ v }}</option>
                                {% endfor %}
            </select>
                        {% endif %}

                        {% if rule_option == 'day' %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="is">{{ lang('text_is') }}</option>
                    <option data-setting="comparison" value="not">{{ lang('text_is_not') }}</option>
                </select>
                            <select class="notSelect form-control" name="##_value"
                                    data-help="{{ lang('help_day') }}">
                    <option data-setting="value" value="">{{ lang('standard_select') }}</option>
                                {% for day in ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'] %}
                                    <option data-setting="value"
                                            value="{{ day }}">{{ lang('text_' ~ day) }}</option>
                                {% endfor %}
                </select>
                        {% endif %}

                        {% if rule_option == 'date' or rule_option == 'time' %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="after">{{ lang('text_is_on_or_after') }}</option>
                    <option data-setting="comparison" value="before">{{ lang('text_is_on_or_before') }}</option>
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    placeholder="{{ lang('help_' ~ rule_option) }}"
                                    data-help='{{ lang("help_datetime_criteria") }}'/>
                        {% endif %}

                        {% if rule_option in ['length', 'width', 'height', 'quantity', 'stock', 'total', 'volume', 'weight'] %}
                            <select class="notSelect form-control" name="##_comparison"
                                    data-help="{{ lang('help_cart_criteria_comparisons') }}">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <optgroup label="{{ lang('text_eligible_item_comparisons') }}">
                        <option data-setting="comparison" value="cart">{{ lang('text_of_cart') }}</option>
                        <option data-setting="comparison" value="any">{{ lang('text_of_any_item') }}</option>
                        <option data-setting="comparison" value="every">{{ lang('text_of_every_item') }}</option>
                    </optgroup>
                    <optgroup label="{{ lang('text_entire_cart_comparisons') }}">
                        <option data-setting="comparison" value="entire_cart">
                            {{ lang('text_of_entire_cart') }}
                        </option>
                        <option data-setting="comparison" value="entire_any">
                            {{ lang('text_of_any_item_in_entire_cart') }}
                        </option>
                        <option data-setting="comparison" value="entire_every">
                            {{ lang('text_of_every_item_in_entire_cart') }}
                        </option>
                    </optgroup>
                </select>
                =
                <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                        data-help="{{ lang('help_cart_criteria') }}"/>
                            <span>{{ _context[rule_option ~ '_unit'] }}</span>
                        {% endif %}

                        {% if rule_option == 'coupon' %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="is">{{ lang('text_is') }}</option>
                    <option data-setting="comparison" value="not">{{ lang('text_is_not') }}</option>
                    <option data-setting="comparison" value="discount">{{ lang('text_discount_is') }}</option>
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help="{{ lang('help_coupon') }}"/>
                        {% endif %}

                        {% if rule_option == 'gift_voucher' %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="is">{{ lang('text_is') }}</option>
                    <option data-setting="comparison" value="not">{{ lang('text_is_not') }}</option>
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help="{{ lang('help_gift_voucher') }}"/>
                        {% endif %}

                        {% if rule_option == 'reward_points' %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="applied">{{ lang('text_applied_to_cart') }}</option>
                    <option data-setting="comparison"
                            value="products">{{ lang('text_of_products_in_cart') }}</option>
                </select>
                =
                <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                        data-help="{{ lang('help_reward_points') }}"/>
                        {% endif %}

                        {% if rule_option in ['city', 'distance', 'postcode', 'shipping_rate'] %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="is">{{ lang('text_is') }}</option>
                    <option data-setting="comparison" value="not">{{ lang('text_is_not') }}</option>
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help="{{ lang('help_' ~ rule_option) }}"/>
                        {% endif %}

                        {% if rule_option == 'location_comparison' %}
                            =
                            <input data-setting="comparison" value="" type="hidden" class="form-control"
                                    name="##_comparison"/>
                            <select class="notSelect form-control" name="##_value"
                                    data-help='{{ lang('help_location_comparison') }}'>
                    <option data-setting="value" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="value" value="payment">{{ lang('text_payment_address') }}</option>
                    <option data-setting="value" value="shipping">{{ lang('text_shipping_address') }}</option>
                </select>
                        {% endif %}

                        {% if rule_option == 'shipping_cost' %}
                            =
                            <input data-setting="comparison" value="" type="hidden" class="form-control"
                                    name="##_comparison"/>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help='{{ lang('help_shipping_cost') }}'/>
                        {% endif %}
                        

                        {% if rule_option in ['currency', 'geo_zone', 'customer_group', 'language', 'payment_extension', 'shipping_extension', 'store'] %}
                            <select class="notSelect form-control" name="##_comparison">
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="is">{{ lang('text_is') }}</option>
                    <option data-setting="comparison" value="not">{{ lang('text_is_not') }}</option>
                </select>
                            <select class="notSelect form-control" name="##_value"
                                    data-help='{{ lang('help_' ~ rule_option) }}'>
                    <option data-setting="value" value="">{{ lang('standard_select') }}</option>
                                {% for k,v in _context[rule_option ~ '_array'] %}
                                    <option data-setting="value" value="{{ k }}">{{ v }}</option>
                                {% endfor %}
            </select>
                        {% endif %}


                        {% if rule_option == 'past_orders' %}
                            <select class="notSelect form-control" name="##_comparison"
                                    data-help='{{ lang("help_past_orders_dropdown") }}'>
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="days">{{ lang('text_days') }}</option>
                    <option data-setting="comparison" value="quantity">{{ lang('text_quantity') }}</option>
                    <option data-setting="comparison" value="total">{{ lang('text_total') }}</option>
                </select>
                =
                <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                        data-help='{{ lang('help_past_orders') }}'/>
                        {% endif %}
                        <!-- , 'warehouse' -->
                        {% if rule_option in ['attribute', 'attribute_group', 'category', 'manufacturer', 'product', 'customer'] %}
                            <select class="notSelect form-control" name="##_comparison">
                                <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                                <option data-setting="comparison" value="is">{{ lang('text_is') }}</option>
                                <option data-setting="comparison" value="not">{{ lang('text_is_not') }}</option>
                            </select>
                            <input data-setting="value" value="" type="text" class="form-control typeahead"
                                    data-type="{{ rule_option }}" name="##_value"
                                    data-help='{{ lang('help_' ~ rule_option) }}'/>
                        {% endif %}

                        {% if rule_option == 'option' %}
                            <input data-setting="comparison" value="" type="text" class="form-control typeahead"
                                    data-type="option"
                                    name="##_comparison" data-help="{{ lang('help_option') }}"/>
                =
                <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                        data-help='{{ lang('help_option_value') }}'/>
                        {% endif %}

                        {% if rule_option == 'product_group' %}
                            {{ lang('text_cart_has_items_from') }}
                            <select class="notSelect form-control pad-left-sm" name="##_comparison"
                                    data-help='{{ lang("help_product_group_comparison") }}'>
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                    <option data-setting="comparison" value="any">{{ lang('text_any') }}</option>
                    <option data-setting="comparison" value="all">{{ lang('text_all') }}</option>
                    <option data-setting="comparison" value="not">{{ lang('text_not') }}</option>
                    <option data-setting="comparison" value="onlyany">{{ lang('text_only_any') }}</option>
                    <option data-setting="comparison" value="onlyall">{{ lang('text_only_all') }}</option>
                    <option data-setting="comparison" value="none">{{ lang('text_none_of_the') }}</option>
                </select>
            {{ lang('text_members_of') }}
            <select class="notSelect form-control pad-left-sm" name="##_value" data-dropdown-value=""
                    data-help='{{ lang("help_product_group") }}'>
                    <option data-setting="value" value="">{{ lang('standard_select') }}</option>
                            {% for k,v in product_groups %}
                                <option data-setting="value" value="{{ k }}">{{ v }}</option>
                            {% endfor %}
                </select>
                        {% endif %}

                        {% if rule_option == 'other_product_data' %}
                            <select class="notSelect form-control" name="##_comparison"
                                    data-help='{{ lang("help_other_product_data_column") }}'>
                    <option data-setting="comparison" value="">{{ lang('standard_select') }}</option>
                                {% for column in product_columns %}
                                    <option data-setting="comparison" value="{{ column }}">{{ column }}</option>
                                {% endfor %}
                </select>
                            <input data-setting="value" value="" type="text" class="form-control" name="##_value"
                                    data-help='{{ lang("help_other_product_data") }}'/>
                        {% endif %}

                        {% if rule_option == 'rule_set' %}
                            <input data-setting="comparison" type="hidden" class="form-control" name="##_comparison"
                                    value=""/>
                            <select class="notSelect form-control" name="##_value" data-dropdown-value=""
                                    data-help='{{ lang("help_rule_set") }}'>
                    <option data-setting="value" value="">{{ lang('standard_select') }}</option>
                                {% for k,v in rule_sets %}
                                    <option data-setting="value" value="{{ k }}">{{ v }}</option>
                                {% endfor %}
                </select>
                        {% endif %}

            </span>

                {% endset %}

                {% set ruleOptionTemplates = ruleOptionTemplates|merge({(rule_option): ruleOptionTemplate}) %}

                {{ ruleOptionTemplates[rule_option] }}

            {% endfor %}
        {% endfor %}

    </div>
{% endif %}

<form class="combined_inputs_form row form" method="post" action="{{ links['action'] }}">
    <div class="col-md-12">
        <div class="panel">
            <ul class="nav nav-tabs nav-tabs-highlight nav-justified nav-tabs-top top-divided">
                {% for tab in tabs %}
                    <li >
                        <a href="#tab_{{ tab }}" data-toggle="tab">   
                            {{ lang('tab_' ~ tab) }} 
                        </a>
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="tab-content">
            {% for tab in tabs %}
                <div class="tab-pane {{ loop.first ? 'active' : '' }}" id="tab_{{ tab }}">
                    {% include 'default/template/multiseller/' ~ tab ~ '_seller.expand' with {'key': tab, 'ruleSelectorTemplate': ruleSelectorTemplate, 'ruleOptionTemplates': ruleOptionTemplates} %}
                </div>
            {% endfor %}
        </div>
    </div>
</form>

<script>
  

    function addRule(element) {
        var firstUnusedNumber = 1;
        while (element.parent().html().indexOf('_' + firstUnusedNumber + '_type') != -1) {
            firstUnusedNumber++;
        }
        element.before('<div class="rule">' + $('#rule-selector-html').html().replace(/##/g, element.attr('data-prefix') + '_' + firstUnusedNumber) + '</div>');
        //        attachTooltips(element.prev());
    }

    $(document).on('change', '.rule > select', function () {
        $(this).nextAll().remove();
        $(this).after($('#rule-templates .' + $(this).val() + '-html')[0].outerHTML.replace(/##/g, $(this).attr('data-prefix')));
        if ($(this).val() == 'rule_set' || $(this).val() == 'product_group') {
            loadDropdown($(this).parent().find('select[data-dropdown-value]'));
        }
        //        attachTooltips($(this).next());
        saveRow($(this).next());
    });

    function setInputAttributes(element) {
        element.find('input[type="text"]').each(function () {
            $(this).attr('value', $(this).val());
        });
        element.find('input[type="checkbox"]').each(function () {
            if ($(this).is(':checked')) {
                $(this).attr('checked', 'checked');
            } else {
                $(this).removeAttr('checked');
            }
        });
        element.find('textarea').each(function () {
            $(this).html($(this).val());
        });
        element.find('select').each(function () {
            var selectValue = $(this).val();
            $(this).find('option[value="' + selectValue + '"]').attr('selected', 'selected').siblings().removeAttr('selected');
            $(this).val(selectValue);
        });
    }

    // Row Functions
    function removeRow(row) {
        if (row.parent().find('tr').length != 1) {
            var i = 0;
            row.addClass('save-error').find(':input').each(function (index, element) {
                $.get('shipping/seller_based/deleteSetting?setting=' + $(this).attr('name'), function (data) {
                    i++;
                    if (i == row.find(':input').length) {
                        row.remove();
                    }
                });
            });
        } else {
            clearRow(row);
        }
    }

    function clearRow(row, type) {

        var _t = 'hard';

        if (typeof type != 'undefined' && type == 'soft') {
            _t = 'soft';
        }

        row.find(':input').each(function () {
            if (_t == 'hard') {
                $.get('shipping/seller_based/deleteSetting?setting=' + $(this).attr('name'));
            }
        });
        row.find('input[type=text], textarea').val('');
        row.find(':checked').removeAttr('checked');
        row.find(':selected').removeAttr('selected');
        row.find('.rule').remove();
        row.find('.product-group-scrollbox div').remove();
        row.find('input[data-default]').each(function () {
            $(this).val($(this).attr('data-default'));
        });
        row.find(':checkbox[data-default]').each(function () {
            $(this).prop('checked', 'checked');
        });
        row.find('select[data-default]').each(function () {
            $(this).find('option[value="' + $(this).attr('data-default') + '"]').attr('selected', 'selected');
        });
        return row;
    }

    function copyRow(row) {
        setInputAttributes(row);
        var clone = row.clone();
        if (row.parents('table').attr('data-autoincrement') != undefined) {
            var firstUnusedNumber = row.parents('table').attr('data-autoincrement');
            row.parents('table').attr('data-autoincrement', parseInt(firstUnusedNumber) + 1);
        } else {
            var firstUnusedNumber = 1;
            while (row.parent().html().indexOf(row.attr('class') + '_' + firstUnusedNumber + '_') != -1) {
                firstUnusedNumber++;
            }
        }
        clone.html(clone.html().replace(new RegExp(row.attr('class') + '_(\\d+)_', 'g'), row.attr('class') + '_' + firstUnusedNumber + '_'));
//        attachTooltips(clone);
        clone.find('.tt-query').siblings().remove();
        clone.find('.tt-query').removeClass('tt-query').removeAttr('style').unwrap();
        clone.insertAfter(row).show();


        $('select', clone).next().next().remove()

        return row.next();
    }

    function saveRow(row) {
        /*row.find('.form-control').each(function () {
            $(this).change();
        });*/
    }


    // Typeahead Functions
    {% if saved['autocomplete_preloading'] is not empty %}
    var localdata = {
        {% for typeahead in ['all']|merge(typeaheads) %}
        '{{ typeahead }}': [{{ _context[typeahead~'_preload'] }}],
        {% endfor %}
    };
    {% endif %}

    var currentTypeaheadValue = '';

    {% if typeaheads is not empty %}
    $(document).on('click', '.typeahead', function () {
        var element = $(this);
        if (element.hasClass('tt-query') && element.attr('data-type') != 'typeahead') return;
        var type = (element.attr('data-type') == 'typeahead') ? element.parents('td').find('select').val() : element.attr('data-type');
        element.typeahead('destroy').typeahead({
            limit: 100,
            {#{% if saved['autocomplete_preloading'] is not empty %}#}
            {#local: localdata[type],#}
            {#{% endif %}#}
            remote: '{{ type }}/{{ name }}/typeahead?type=' + type + '&q=%QUERY'
        }).on('keydown', function (e) {
            if (e.which == 13 && $('.tt-is-under-cursor').length < 1) {
                currentTypeaheadValue = '';
                element.parent().find('.tt-suggestion:first-child').click();
            }
        }).on('keyup', function (e) {
            currentTypeaheadValue = element.val();
            console.log(currentTypeaheadValue)
        }).on('typeahead:selected', function (obj, datum) {
            if (element.val().indexOf('[') != -1) {
                var scrollbox = element.parent().parent().next();
                if (scrollbox.hasClass('product-group-scrollbox')) {
                    if (!scrollbox.find('input[value="' + element.val() + '"]').length) {
                        {% if save_type == 'auto' %}
                        scrollbox.addClass('saving');
                        {% endif %}
                        var firstUnusedNumber = 1;
                        var keySplit = element.attr('data-key').split('_').pop();
                        while (scrollbox.html().indexOf('_' + keySplit + '_' + firstUnusedNumber) != -1) {
                            firstUnusedNumber++;
                        }
                        var nameEnding = '_' + firstUnusedNumber;
                        scrollbox.append('<div><a class="btn btn-danger btn-xs" data-help="{{ lang('button_delete') }}" onclick="removeRow($(this).parent())"><i class="fa fa-trash-alt fa-lg"></i></a> &nbsp;' + element.val() + '<input type="hidden" class="form-control" name="' + element.attr('data-key') + nameEnding + '" value="' + element.val() + '" /><span style="display: none">' + element.val() + '</span></div>').find('input').last().change();
                        scrollbox.append(scrollbox.children().sort(function (a, b) {
                            A = $('input', a).val().toLowerCase();
                            B = $('input', b).val().toLowerCase();
                            return (A < B) ? -1 : (A > B) ? 1 : 0;
                        }));
                        setTimeout(function () {
                            scrollbox.removeClass('saving');
                        }, 500);
                    }
                    element.typeahead('setQuery', currentTypeaheadValue).focus();
                } else {
                    element.typeahead('setQuery', element.val().replace(/\[.*:/, '[')).change();
                }
            }
        });
        element.focus();
    });
    {% endif %}

</script>

{% if typeaheads is not empty %}
    <script src="view/javascript/jquery/typeahead.min.js"></script>
{% endif %}
