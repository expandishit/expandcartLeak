{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% set dualMenuEnabled = true %}

{% import "controls/forms.expand" as forms %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {%
        include 'module/product_attachments/side_menu.expand'
        with {'expand': '#product_attachments', 'active': '#product_attachments','status':status}
    %}
{% endblock secondarymenu %}

{% block headelements %}
    <span class="headLinksEffect">
	    <a href="{{ link('catalog/download/insert', '', 'SSL') }}" class="btn btn-success btn-labeled btn-xs"><b><i class="icon-plus3"></i></b> {{ lang('btn_new_download') }}</a>
	</span>
{% endblock headelements %}

{% block content %}

<div class="row">
    <div class="col-md-12">
        <div class="features-table-container rounded">
            <div class="collapse in" id="panel-language">
                <table id="datatable-language" class="table table-hover datatable-highlight">
                    <thead>
                    <tr>
                        <th></th>
                        <th>{{ lang('column_name') }}</th>
                        <th>{{ lang('column_remaining') }}</th>
                        <th></th>
                    </tr>
                    </thead>
                </table>
            </div>
        </div>
        <!-- /a legend -->
    </div>
</div>

{% endblock %}
{% block scripts %}
    {% import _self as dtControls %}
    <script>
        $(document).ready(function() {
            $.extend($.fn.dataTable.defaults, {
                autoWidth: false,
                dom: '<"datatable-header"fB><"datatable-scroll"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
            });
        });

        var dt;
        $(document).ready(function() {

            dt = $('#datatable-language').DataTable({
                processing: true,
                serverSide: true,
                stateSave: true,
                language: {
                    ...locales['dt_language'],
                    search: ''
                },
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                drawCallback: function () {
                    $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
                },
                preDrawCallback: function() {
                    $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
                },
                "ajax": {
                    url: '{{ link('catalog/download/dtHandler') }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [
                    {
                        text: "<i class='icon-trash'></i>",
                        className: 'btn btn-default bulk-delete disabled',
                        action: function(e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function(item) {
                                selectedIds.push(item.download_id);
                            });
                            // console.log(selectedIds);
                            if (selectedIds.length > 0){
                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('catalog/download/dtDeleteDownload') }}',
                                        type: 'post',
                                        data: {id: selectedIds},
                                        success: function(){
                                            reloadDT();
                                        }
                                    });
                                });
                            }
                        }
                    },
                    {
                        extend: 'collection',
                        text: '<i class="icon-drawer-out"></i>',
                        className: 'btn btn-default btn-export',
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                text: locales['buttons']['copy'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'csvHtml5',
                                text: locales['buttons']['export2csv'],
                                fieldSeparator: ',',
                                extension: '.csv',
                                bom: "true",
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'excelHtml5',
                                text: locales['buttons']['export2excel'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'pdfHtml5',
                                text: locales['buttons']['export2pdf'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            }
                        ]
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="icon-grid3"></i>',
                        className: 'btn btn-default btn-colvis',
                        columns: [1, 2]
                    }
                ],

                columns: [
                    {
                        title:`<input type="checkbox" class="styled" onchange='toggleSelectAll(this);'>`,
                        orderable: false,
                        data: "download_id",
                        width: "50px",
                        render: function (data, type, row) {
                            return `<input type="checkbox" class="select-checkbox">`;
                        }
                    },
                    {
                        data: "filename",
                        render: function (data, type, row) {
                            return `<a href="{{ link('catalog/download/update') }}?download_id=${row['download_id']}">${row['filename']}</a>`;
                        }
                    },
                    {data: "remaining"},
                ],
                "order": [[1, "asc"]],
                columnDefs: [
                    {
                        targets: 3,
                        orderable: false,
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href="{{ link('catalog/download/update') }}?download_id=${row['download_id']}"><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                            <li><a onclick="removeItem(${row['download_id']})"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ]
            });

            $('.product-list .product-list-title .btns').prepend(`<a href="{{ insert }}" class="theme-btn rounded-primary-btn">{{ lang('btn_new_download') }}</a>`)

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "data-placement": "bottom",
                "title": locales['button_delete']
            });
            $(".btn-export").attr({
                "data-popup": "tooltip",
                "data-placement": "bottom",
                "title": locales['button_export']
            });
            $(".btn-colvis").attr({
                "data-popup": "tooltip",
                "data-placement": "bottom",
                "title": locales['button_colvis']
            });

            $('[data-popup="tooltip"]').tooltip();

            // On each draw, loop over the `detailRows` array and show any child rows
            dt.on('draw', function () {
                $(".switch").bootstrapSwitch();
            });

            dt.on( 'select', function ( e, objDT, type, indexes ) {
                if ( dt.rows( '.selected' ).any() ) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            })
            .on( 'deselect', function ( e, objDT, type, indexes ) {
                if ( dt.rows( '.selected' ).any() ) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            })
            .on( 'search.dt', function (e, objDT) {
    //                console.log(e);
    //                dt.columns(':visible').search(e);
                if ( dt.rows( '.selected' ).any() ) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            });

            $('.dataTables_length select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });

    //            $(".bulk-delete").on('click', function() {
    //                console.log(dt.rows('.selected').data());
    //            });
        });

        function removeItem(id) {
            //alert(clientId);
            confirmMessage(function() {
                ajax("{{ link("catalog/download/dtDeleteDownload") }}", {id: id}, function (res) {
                    reloadDT();
                });
            });
        }

        function reloadDT() {
            dt.ajax.reload();
        }

        function toggleSelectAll(checkbox) {
            if (checkbox.checked == true) {
                dt.rows().select();
            } else {
                dt.rows().deselect();
            }
        }
    </script>
{% endblock scripts %}
