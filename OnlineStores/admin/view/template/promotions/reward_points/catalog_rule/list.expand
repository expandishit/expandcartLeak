{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}

{% block title %}
{{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
{{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'promotions/reward_points/menu.expand' with {'expand': '#reward_points_pro', 'active': '#catalog'} %}
{% endblock secondarymenu %}

{% block headelements %}
<span class="headLinksEffect">
    <a href="{{ add_rule }}" class="btn btn-success btn-labeled btn-xs"><b><i class="icon-plus3"></i></b>{{lang('button_add_rule')}}</a>
</span>
{% endblock headelements %}

{% block content %}

    <!-- Catalog earning rules data table -->
    <div class="col-md-12">
        <div class="panel panel-flat">
            <div class="collapse in" id="panel-language">
                <table id="datatable-language" class="table table-hover datatable-highlight">
                     <thead>
                          <tr>
                            <th></th>
                            <th>{{ lang('column_rule_name') }}</a></th>
                            <th>{{ lang('column_start_date') }}</a></th>
                            <th>{{ lang('column_end_date') }}</th>
                            <th>{{ lang('column_status') }}</th>
                            <th>{{ lang('column_action') }}</th>
                          </tr>
                      </thead>
                </table>
            </div>
        </div>
        <!-- /a legend -->
    </div>
    <!-- End of Catalog earning rules data table -->

{% endblock content %}
{% block scripts %}
    {{ parent() }}
    {% import _self as dtControls %}
    <script>
    $(document).ready(function() {
        $('select').select2();
        $('.touchspinney').TouchSpin({
            'postfix': '{{ current_currency_code }}',
            'decimals': 2,
        });
         $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"fB><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            // "dom": '<"top"i>rt<"bottom"flp><"clear">',
            language: locales['dt_language'],
            lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, "All"] ]
        });
    });

    var dt;
    $(document).ready(function() {

        dt = $('#datatable-language').DataTable({
            processing: true,
            serverSide: true,
            stateSave: true,
            rowId: "rule_id",
            language: locales['dt_language'],
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            "ajax": {
                url: '{{ link('promotions/reward_points/dtCatalogEarningRulesHandler') }}',
                type: "post",
                error: function (e,m,l) {
                    console.log(e);
                    $(".datatables_country-error").html("");
                    $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                    $("#datatables_country_processing").css("display", "none");
                }
            },
            buttons: [
                {
                    text: "<i class='icon-trash'></i>",
                    className: 'btn btn-default bulk-delete disabled',
                    action: function(e, dt, node, config) {
                        var selectedRows = dt.rows('.selected').data();
                        var selectedIds = [];
                        selectedRows.each(function(item) {
                            selectedIds.push(item.rule_id);
                        });
                        // console.log(selectedIds);
                        if (selectedIds.length > 0){
                            confirmMessage(function () {
                                $.ajax({
                                    url: '{{ link('promotions/reward_points/dtCatalogEarningRulesDelete') }}',
                                    type: 'post',
                                    data: {id: selectedIds},
                                    success: function(){
                                        console.log("ASD");
                                        reloadDT();
                                    },

                                });
                            });
                        }
                    }
                },
                {
                    extend: 'collection',
                    text: '<i class="icon-drawer-out"></i>',
                    className: 'btn btn-default btn-export',
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            text: locales['buttons']['copy'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csvHtml5',
                            text: locales['buttons']['export2csv'],
                            fieldSeparator: ',',
                            extension: '.csv',
                            bom: "true",
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            text: locales['buttons']['export2excel'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            text: locales['buttons']['export2pdf'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        }
                    ]
                },
                {
                    extend: 'colvis',
                    text: '<i class="icon-grid3"></i>',
                    className: 'btn btn-default btn-colvis',
                    columns: [1,2,3,4]
                }
            ],

            columns: [
                {
                    title:`<input type="checkbox" class="styled" onchange='toggleSelectAll(this);'>`,
                    orderable: false,
                    data: "rule_id",
                    width: "50px",
                    render: function (data, type, row) {
                        return `<input data-id="${row['rule_id']}" type="checkbox" class="select-checkbox">`;
                    }
                },
                {
                    data: 'name',
                },
                {
                    data: "start_date",
                },
                {
                    data: "end_date",
                },
                {
                    data: "status",
                    render: function(data, whatever, row) {
                        if ( row['status'] == '1' || row['status'] == 1 ) {
                            return '<span class="label label-success">' + row['status_text'] + '</span>';
                        } else {
                            return '<span class="label label-danger">' + row['status_text'] + '</span>';
                        }
                    }
                }
            ],
            "order": [[1, "asc"]],
            columnDefs: [
                {
                    targets: 5,
                    orderable: false,
                    render: function (data, type, row) {
                        return `<ul class="icons-list" style="text-align:center">
                                <li class="dropdown">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                        <i class="icon-menu9"></i>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-right">
                                        <li><a href='{{ link("promotions/reward_points/catalogRuleEdit") }}?rule_id=${row['rule_id']}' ><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                        <li><a onclick="removeItem(${row['rule_id']})"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                    </ul>
                                </li>
                            </ul>
                        `;
                    }
                }
            ]
        });

        $(".bulk-delete").attr({
            "data-popup": "tooltip",
            "title": locales['button_delete']
        });
        $(".btn-export").attr({
            "data-popup": "tooltip",
            "title": locales['button_export']
        });
        $(".btn-colvis").attr({
            "data-popup": "tooltip",
            "title": locales['button_colvis']
        });

        $('[data-popup="tooltip"]').tooltip();

        // On each draw, loop over the `detailRows` array and show any child rows
        dt.on('draw', function () {
            $(".switch").bootstrapSwitch();
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });

        dt.on( 'select', function ( e, objDT, type, indexes ) {
            if ( dt.rows( '.selected' ).any() ) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        })
        .on( 'deselect', function ( e, objDT, type, indexes ) {
            if ( dt.rows( '.selected' ).any() ) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        })
        .on( 'search.dt', function (e, objDT) {
            if ( dt.rows( '.selected' ).any() ) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        });

        $('.dataTables_length select').select2({
            minimumResultsForSearch: Infinity,
            width: 'auto'
        });
        $(".styled, .multiselect-container input").uniform({
            radioClass: 'choice'
        });
    });

    function removeItem(id) {
        confirmMessage(function() {
            ajax(" {{ link ('promotions/reward_points/dtCatalogEarningRulesDelete') }}", {id: id}, function (res) {
                reloadDT();
            });
        });
    }

    function reloadDT() {
        dt.ajax.reload();
    }

    function toggleSelectAll(checkbox) {
        if (checkbox.checked == true) {
            dt.rows().select();
        } else {
            dt.rows().deselect();
        }
    }

</script>
{% endblock scripts %}