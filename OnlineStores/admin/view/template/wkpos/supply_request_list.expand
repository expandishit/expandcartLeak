{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block headelements %}
<span class="headLinksEffect">
    <!-- <button type="button" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-danger" onclick="confirm('{{ text_confirm }}') ? $('#form-request-list').submit() : false;"><i class="fa fa-ban"></i> Cancel</button> -->
</span>
{% endblock headelements %}


{% block content %}

<div class="panel panel-default" style="margin-bottom: 1px;">
    <ul class="nav nav-tabs nav-tabs-highlight nav-justified nav-tabs-top top-divided" style="margin-bottom: 0">
        <li {% if typ != 'a' and typ != 'c' %} class="active" {% endif %}><a href="wkpos/supply_request?typ=p">{{ tab_pending }}</a></li>
        <li {% if typ == 'a' %} class="active" {% endif %}><a href="wkpos/supply_request?typ=a">{{ tab_accepted }}</a></li>
        <li {% if typ == 'c' %} class="active" {% endif %}><a href="wkpos/supply_request?typ=c">{{ tab_canceled }}</a></li>
    </ul>
</div>

<div class="tab-content">
    <!-- BEGIN Products TAB -->
    <div class="tab-pane active">
        <div class="container-detached">
      <div class="tab-pane fade in active" id="gridView">
          <div class="panel panel-default">
              <div class="collapse in">
                  <table id="datatable-supplier_requests" class="table table-hover datatable-highlight">
                      <thead>
                      <tr>
                          <th></th>
                          <th>{{ column_request_id }}</th>
                          <th>{{ column_uname }}</th>
                          <th>{{ column_date_added }}</th>
                          <th>{{ column_comment }}</th>
                          <th>{{ column_status }}</th>
                          <th class="do-not-export-excel do-not-export-pdf do-not-export-csv"></th>
                      </tr>
                      </thead>
                  </table>
              </div>
          </div>
      </div>
    </div>
    </div>
</div>
<div id="viewRequest" class="modal fade" role="dialog" tabindex="-1">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <!--<h4 class="modal-title">Supply Request</h4>-->
      </div>
      <div class="modal-body" style="padding-bottom: 45px;">
        <div class="table-responsive">
          <table class="table table-bordered table-hover">
            <thead>
              <tr>
                <td>{{ column_supplier }}</td>
                <td>{{ column_product }}</td>
                <td>{{ column_quantity }}</td>
                <td class="text-center">{{ column_comment }}</td>
                <td>{{ button_status }}</td>
                <!-- <td>Action</td> -->
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">{{ button_close }}</button>
      </div>
    </div>
  </div>
</div>
<button class="hide" id="showModal" data-toggle="modal" data-target="#viewRequest"></button>
<script type="text/javascript">
  $('body').on('click', '.show-request', function () {
    var request_id = $(this).attr('request-id');
    $.ajax({
      url: 'wkpos/supply_request/view?request_id=' + request_id,
      dataType: 'json',
      beforeSend: function () {
        $('#showModal').trigger('click');
        $('#viewRequest tbody').html('<tr class="text-center"><td colspan="5"><i class="fa fa-spinner fa-spin"></i></td></tr>');
      },
      success: function (json) {
        if (json['supply_info']) {
          var requests = json['supply_info'];
          var html = '';
          for (var i = 0; i < Object.keys(requests).length; i++) {
            html += '<tr>';
            html += '  <td>' + requests[i]['supplier'] + '</td>';
            html += '  <td>' + requests[i]['name'] + '</td>';
            html += '  <td>' + requests[i]['quantity'] + '</td>';
            if (requests[i]['comment'] == '') {
              html += '  <td class="text-center">';
              html += '-';
            } else {
              html += '  <td>';
              html += requests[i]['comment'];
            }
            html += '  </td>';
            html += '  <td>';
            if (requests[i]['status'] == '0') {
              html += '{{ text_unfulfilled }}';
              // html += '  </td>';
              // html += '  <td>';
              // html += '    <button type="button" class="btn btn-success" onclick="confirm(\'Are you sure?\')? requestInfo() : false;"><i class="fa fa-thumbs-up"></i></button>';
            } else {
              html += '{{ text_fulfilled }}';
              // html += '  </td>';
              // html += '  <td>';
              // html += '    <button type="button" class="btn btn-success" disabled><i class="fa fa-thumbs-up"></i></button>';
            }
            html += '  </td>';
            html += '</tr>';
          }
        } else {
          html += '<tr class="text-center"><td colspan="5">It seems to have some error while requesting</td></tr>';
        }
        $('#viewRequest tbody').html(html);
      },
      error: function () {
        $('.in').trigger('click');
      }
    })
  });

  // function requestInfo() {
  //   console.log('here')
  // }
</script>
{% endblock %}

{% block scripts %}

<script>
    $(document).ready(function() {

        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });
    });

    var suppRequestsTable;

    Array.prototype.remove = function(item)
    {
        // index will have -1 if item does not exist
        // else it will have the index of 1st item found in array
        var index = this.indexOf(item); 

        if (index > -1)
        {
            // splice() method is used to add/remove items(s) in array
            this.splice(index, 1); 
        }

        return index;
    }

    var selectedIds = [];
    $(document).ready(function(){
        // showHideOrderStatuses();

        // $('.hide-on-grid-view').hide();

        // $('select').select2({dropdownAutoWidth : true});

        suppRequestsTable = $('#datatable-supplier_requests').DataTable({
                processing: true,
                serverSide: true,
                stateSave: true,
                rowId: "request_id",
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                "ajax": {
                    url: '{{ link('wkpos/supply_request/dtHandler') }}?typ={{ typ }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [
                    {% if typ != 'a' %}
                    {
                        text: "<i class=' icon-thumbs-up3'></i>",
                        className: 'btn btn-success bulk-accept',
                        action: function(e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            selectedRows.each(function(item) {
                                selectedIds.push(item.request_id);
                            });
                            if (selectedIds.length > 0){

                                var textData = {
                                    title: '{{ approve_title }}',
                                    text: '{{ approve_text }}',
                                    type : 'info',
                                    confirmButtonColor: "#4CAF50",
                                    confirmButtonText: '{{ approve_button }}'
                                };

                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('wkpos/supply_request/dtUpdate') }}',
                                        type: 'post',
                                        data: {id: selectedIds},
                                        success: function(){
                                            reloadDT();
                                        }
                                    });
                                }, '', textData);

                            }
                        }
                    },
                    {% endif %}

                    {% if typ != 'c' %}
                    {
                        text: "<i class='icon-blocked'></i>",
                        className: 'btn btn-danger bulk-delete',
                        action: function(e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            selectedRows.each(function(item) {
                                selectedIds.push(item.request_id);
                            });
                            if (selectedIds.length > 0){

                                var textData2 = {
                                    title: '{{ cancel_title }}',
                                    text: '{{ cancel_text }}',
                                    confirmButtonText: '{{ cancel_button }}',
                                    cancelButtonText: '{{ cancel_cancel }}'
                                };

                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('wkpos/supply_request/dtCancel') }}',
                                        type: 'post',
                                        data: {id: selectedIds},
                                        success: function(){
                                            reloadDT();
                                        }
                                    });
                                }, '', textData2);
                            }
                        }
                    }
                    {% endif %}
                ],

                columns: [
                    {
                        title:`<input type="checkbox" class="styled" onchange='toggleSelectAll(this);'>`,
                        orderable: false,
                        width: "50px",
                        data: 'request_id',
                        render: function(data, type, row) {
                          /*if(row['status'] == '0')
                            return `<input type="checkbox" row-id="${row['request_id']}" class="select-checkbox">`;
                          else
                            return '';*/
                            return `<input type="checkbox" row-id="${row['request_id']}" class="select-checkbox">`;
                        }
                    },
                    {
                        data: "request_id"
                    },
                    {
                        data: "name"
                    },
                    {
                        data: "date_added"
                    },
                    {
                        data: "comment"
                    },
                    {
                        data: "status_text"
                    }
                ],
                order: [[1, "desc"]],
                columnDefs: [
                    {
                        targets: 4,
                        className: 'ltr text-left'
                    },
                    {
                        targets: 6,
                        orderable: false,
                        width: "10px",
                        className: "text-center",
                        render: function (data, type, row) {
                            /*var suppCancelSts = '';
                            if(row['cancel'] == '0'){
                              if(row['status'] == '1'){
                                suppCancelSts = `<button class="btn btn-success" data-toggle="tooltip" title="{{ button_status }}" type="button" disabled><i class="fa fa-thumbs-up"></i></button>`;
                              }else{
                                suppCancelSts = `<a href="wkpos/supply_request/update?request_id=${row['request_id']}" class="btn btn-success" data-toggle="tooltip" title="{{ button_status }}"><i class="fa fa-thumbs-up"></i></a>`
                              }
                            }*/
                            return `<button class="btn btn-info show-request" data-toggle="tooltip" title="{{ button_view }}" type="button" request-id="${row['request_id']}"><i class="fa fa-eye"></i></button>
                            `;
                        }
                    }
                ]
            });

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "title": locales['button_cancel']
            });
            $(".bulk-accept").attr({
                "data-popup": "tooltip",
                "title": locales['button_accept']
            });

            $('[data-popup="tooltip"]').tooltip();

            // On each draw, loop over the `detailRows` array and show any child rows
            suppRequestsTable.on('draw', function () {
                $(".switch").bootstrapSwitch();
                $(".styled, .multiselect-container input").uniform({
                    radioClass: 'choice'
                });
            });

            suppRequestsTable.on( 'select', function ( e, objDT, type, indexes ) {
                if ( suppRequestsTable.rows( '.selected' ).any() )
                {
                    $(".bulk-delete").removeClass('disabled');
                    $(".bulk-accept").removeClass('disabled');
                }
                else
                {
                    $(".bulk-delete").addClass('disabled');
                    $(".bulk-accept").addClass('disabled');
                }

            })
            .on( 'deselect', function ( e, objDT, type, indexes ) {
                if ( suppRequestsTable.rows( '.selected' ).any() )
                {
                    $(".bulk-delete").removeClass('disabled');
                    $(".bulk-accept").removeClass('disabled');
                }
                else
                {
                    $(".bulk-delete").addClass('disabled');
                    $(".bulk-accept").addClass('disabled');

                }
            })
            .on( 'search.dt', function (e, objDT) {
                if ( suppRequestsTable.rows( '.selected' ).any() )
                {
                    $(".bulk-delete").removeClass('disabled');
                    $(".bulk-accept").removeClass('disabled');
                }
                else
                {
                    $(".bulk-delete").addClass('disabled');
                    $(".bulk-accept").addClass('disabled');
                }
            });

            $('.dataTables_length select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });

        /*function cancelItem(id)
        {
            confirmMessage(
                function ()
                {
                    $.ajax({
                        url: "{{ link('wkpos/supply_request/dtCancel') }}",
                        type: "post",
                        data: { id: id },
                        success: function ( resp )
                        {
                            reloadDT();
                        }
                    });
                }
            );
        }*/

        function reloadDT()
        {
            suppRequestsTable.ajax.reload();
            // loadKanbanCards();
        }

        function toggleSelectAll(checkbox)
        {
            if (checkbox.checked == true) {
                suppRequestsTable.rows().select();
            } else {
                suppRequestsTable.rows().deselect();
            }
        }

    // $(document).on('click', '#filter-button', function(e) {
    //     e.preventDefault();
    //     $('#filter-modal').modal('show');
    // }).on('click', '#grid-view-button', function() {
    //     $('.hide-on-grid-view').hide();
    //     $('.show-on-grid-view').show();
    // }).on('click', '#kanban-view-button', function() {
    //     $('.hide-on-kanban-view').hide();
    //     $('.show-on-kanban-view').show();
    // }).on('change', '#filter-order-statuses', function() {
    //     showHideOrderStatuses();
    // });

    // function update_selected_rows()
    // {
    //     var selectedRows = suppRequestsTable.rows('.selected').data();
    //     selectedRows.each(function(item) {
    //         selectedIds.push(item.order_id);
    //     });
    // }


    // function showHideOrderStatuses()
    // {
    //     $('.order-status-col').hide();

    //     $('#filter-order-statuses option:selected').each(function() {
    //         var order_status_id = $(this).attr('value');
    //         $('.order-status-col-' + order_status_id).show();
    //     });

    // }

    // function draggableInit()
    // {
    //     var order_id;
    //     var original_order_status_id;
    //     var new_order_status_id;

    //     $(document).on('dragstart', '[draggable=true]', function (event) {
    //         order_id = $(this).attr('data-order-id');
    //         original_order_status_id = $(this).attr('data-os-id');
    //         event.originalEvent.dataTransfer.setData("text/plain", event.target.getAttribute('id'));
    //     });

    //     $('#sortableKanbanBoards .kanban-drop-zone').bind('dragover', function (event) {
    //         event.preventDefault();
    //     });

    //     $('#sortableKanbanBoards .col-md-3 .kanban-drop-zone').bind('drop', function (event)
    //     {
    //         var self = $(this);
    //         new_order_status_id = self.attr('data-os-id');

    //         if ( original_order_status_id != new_order_status_id )
    //         {
    //             var elementId = event.originalEvent.dataTransfer.getData("text/plain");
    //             var elem = $('#' + elementId);

    //             var modal = $('#processing-modal');
    //             var form = $('#change-order-status-form');
    //             var order_id = elem.attr('data-order-id');
    //             var new_order_status_name = $('.order-status-col-' + new_order_status_id + ' span.order-status-name').text();
    //             var old_order_status_name = $('.order-status-col-' + original_order_status_id + ' span.order-status-name').text();

    //             form.attr('action', '{{ link("sale/order/history?order_id=") }}' + order_id);

    //             modal.find('label#new-order-status').text(new_order_status_name);
    //             modal.find('label#old-order-status').text(old_order_status_name);

    //             $('#processing-modal').modal('show');

    //             $(document).on('click', '#submit-change-order-status-form', function(event) {
    //                 event.preventDefault();
    //                 startLoadingScreen();
    //                 var notify;
    //                 if ( modal.find('[name=notify]').is(':checked') ) { notify = 1; } else { notify = 0; }

    //                 var comment = modal.find('[name=comment]').text();

    //                 $.ajax({
    //                     url: form.attr('action'),
    //                     type: "post",
    //                     data: {notify: notify, comment: comment, order_status_id: parseInt(new_order_status_id)},
    //                     success: function (resp) {
    //                         reloadDT();
    //                         removeLoadingScreen();
    //                         $('#processing-modal').modal('hide');
    //                     }
    //                 });

    //             });
    //         }
    //     });
    // }

    $(document).ready(function() {
        reloadDT();
        //draggableInit();
    });

</script>

{% endblock scripts %}
