{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block content %}
<div class="container-detached">
  <div class="tab-pane fade in active" id="gridView">
      <div class="panel panel-default">
          <div class="collapse in">
              <table id="datatable-returns" class="table table-hover datatable-highlight">
                  <thead>
                  <tr>
                      <th>{{ column_return_id }}</th>
                      <th>{{ column_order_id }}</th>
                      <th>{{ column_customer }}</th>
                      <th>{{ column_product }}</th>
                      <th>{{ column_model }}</th>
                      <th>{{ column_status }}</th>
                      <th>{{ column_date_added }}</th>
                      <th>{{ column_date_modified }}</th>
                      <th></th>
                  </tr>
                  </thead>
              </table>
          </div>
      </div>
  </div>
</div>
{% endblock %}

{% block scripts %}

<script>
    $(document).ready(function() {

        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });
    });

    var returnTable;

    Array.prototype.remove = function(item)
    {
        // index will have -1 if item does not exist
        // else it will have the index of 1st item found in array
        var index = this.indexOf(item); 

        if (index > -1)
        {
            // splice() method is used to add/remove items(s) in array
            this.splice(index, 1); 
        }

        return index;
    }

    $(document).ready(function(){
        // showHideOrderStatuses();

        // $('.hide-on-grid-view').hide();

        // $('select').select2({dropdownAutoWidth : true});

        returnTable = $('#datatable-returns').DataTable({
                processing: true,
                serverSide: true,
                stateSave: true,
                rowId: "return_id",
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                "ajax": {
                    url: '{{ link('wkpos/returns/dtHandler') }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [],
                columns: [
                    {
                        data: 'return_id'
                    },
                    {
                        data: "order_id"
                    },
                    {
                        data: "customer"
                    },
                    {
                        data: "product"
                    },
                    {
                        data: "model"
                    },
                    {
                        data: "return_status"
                    },
                    {
                        data: "date_added"
                    },
                    {
                        data: "date_modified"
                    }
                ],
                order: [[1, "desc"]],
                columnDefs: [
                    {
                        targets: 3,
                        className: 'ltr text-left'
                    },
                    {
                        targets: 8,
                        orderable: false,
                        width: "10px",
                        className: "text-center",
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href='{{ link('sale/return/update') }}?return_id=${row['return_id']}'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ]
            });

            $('[data-popup="tooltip"]').tooltip();

            // On each draw, loop over the `detailRows` array and show any child rows
            returnTable.on('draw', function () {
                $(".switch").bootstrapSwitch();
                $(".styled, .multiselect-container input").uniform({
                    radioClass: 'choice'
                });
            });

            $('.dataTables_length select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });

        function reloadDT()
        {
            returnTable.ajax.reload();
            // loadKanbanCards();
        }


    $(document).ready(function() {
        reloadDT();
    });

</script>

{% endblock scripts %}
