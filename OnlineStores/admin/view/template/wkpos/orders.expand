{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}

{% set bodyClasses = "has-detached-right sidebar-detached-hidden" %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block babyHeaderContent %}
    {% set babyHeader = true %}
    <ul class="nav navbar-nav">
        <li onclick="toggleFilter(this)"><a class="sidebar-detached-hide"><i class='icon-filter3 position-left'></i> <span>{{ lang('lbl_filter') }}</span></a></li>
        <li id="btnreset" class="hidden"><a type="reset" href="#"><i class="icon-reset position-left"></i> {{ lang('lbl_reset_filter') }}</a></li>
    </ul>
{% endblock %}

{% block content %}

  <!-- Detached content -->
  <div id="product-grid">
      {% include "wkpos/orders-list.expand" %}
  </div>
  <!-- /detached content -->


  <!-- Detached sidebar -->
  {% include "wkpos/orders-filter.expand" %}
  <!-- /detached sidebar -->

{% endblock content %}

{% block scripts %}

{{ parent() }}
{% import _self as dtControls %}
<script>
    $(document).ready(function() {
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });


        $('#resetList').click(function () {

            $(':input', '#filter')
                .not(':button, :submit, :reset, :hidden')
                .val('')
                .prop('checked', false)
                .prop('selected', false);

            $('#filter').find('select').each(function () {
                this.value = '';
            }).trigger('change');

            $('#filter').find('.noui-slider-primary').each(function () {
                $(this).data('ionRangeSlider').reset();
            });

            orderTable.on('preXhr.dt', function (e, settings, data) {
                return $.extend(data, {filter: null});
            });

            orderTable.ajax.reload();
            /*$.ajax({
                url: listLink,
                method: 'get',
                success: function (response) {
                    $('#product-grid').html(response);
                }
            });*/
        });
    });

    function toggleFilter(el) {
        //debugger;
        var isFilterHidden = $('body').hasClass('sidebar-detached-hidden');

        if(isFilterHidden) $(el).children('a').children('span').text('{{ lang('lbl_hide_filter') }}');
        else $(el).children('a').children('span').text('{{ lang('lbl_filter') }}');
    }

    var orderTable;

    Array.prototype.remove = function(item)
    {
        // index will have -1 if item does not exist
        // else it will have the index of 1st item found in array
        var index = this.indexOf(item); 

        if (index > -1)
        {
            // splice() method is used to add/remove items(s) in array
            this.splice(index, 1); 
        }

        return index;
    }

    $(document).ready(function(){
        showHideOrderStatuses();

        $('.hide-on-grid-view').hide();

        $('select').select2({dropdownAutoWidth : true});

        orderTable = $('#datatable-orders').DataTable({
                processing: true,
                serverSide: true,
                stateSave: true,
                rowId: "order_id",
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                "ajax": {
                    url: '{{ link('wkpos/orders/loadOrdersDt') }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [],
                columns: [
                    {
                        data: "order_id"
                    },
                    {
                        data: 'txn_id'
                    },
                    {
                        data: 'customer'
                    },
                    {
                        data: 'user'
                    },
                    {
                        data: 'order_status'
                    },
                    {
                        data: "total",
                        render: function (data, type, row) {
                            return `<label class="label label-primary">${row['total']}</label>`;
                        }
                    },
                    {data: 'date_added'},
                    {data: 'date_modified'},
                ],
                order: [[1, "desc"]],
                columnDefs: [
                    {
                        targets: 4,
                        className: 'ltr text-left'
                    },
                    {
                        targets: 8,
                        orderable: false,
                        width: "10px",
                        className: "text-center",
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href="{{ link('sale/order/info') }}?order_id=${row['order_id']}"><i class="fas fa-eye fa-lg"></i> ${locales['button_view']}</a></li>
                                            <li><a href='{{ link('sale/order/update') }}?order_id=${row['order_id']}'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ]
            });

            $('[data-popup="tooltip"]').tooltip();

            // On each draw, loop over the `detailRows` array and show any child rows
            orderTable.on('draw', function () {
                $(".switch").bootstrapSwitch();
                $(".styled, .multiselect-container input").uniform({
                    radioClass: 'choice'
                });
            });

            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });

        function reloadDT()
        {
            orderTable.ajax.reload();
            // loadKanbanCards();
        }

      $(document).on('click', '#filter-button', function(e) {
          e.preventDefault();
          $('#filter-modal').modal('show');
      }).on('click', '#grid-view-button', function() {
          $('.hide-on-grid-view').hide();
          $('.show-on-grid-view').show();
      }).on('click', '#kanban-view-button', function() {
          $('.hide-on-kanban-view').hide();
          $('.show-on-kanban-view').show();
      }).on('change', '#filter-order-statuses', function() {
          showHideOrderStatuses();
      });

    function update_selected_rows()
    {
        var selectedRows = orderTable.rows('.selected').data();
        selectedRows.each(function(item) {
            selectedIds.push(item.order_id);
        });
    }


    function showHideOrderStatuses()
    {
        $('.order-status-col').hide();

        $('#filter-order-statuses option:selected').each(function() {
            var order_status_id = $(this).attr('value');
            $('.order-status-col-' + order_status_id).show();
        });

    }


    $(document).ready(function() {
        reloadDT();
        //draggableInit();
    }).on('click', '.collapsy', function() {
        var panel_body = $(this).closest('.panel').find('.kanban-card-content');
        var panel_footer = $(this).closest('.panel').find('.panel-footer');

        if ( panel_body.hasClass('opened') )
        {
            panel_body.slideUp('fast').removeClass('opened');
            panel_footer.slideUp('fast').removeClass('opened');
            $(this).html('<i class="fa fa-caret-down"></i>');
            return;
        }
        else
        {
            panel_body.slideDown('fast').addClass('opened');
            panel_footer.slideDown('fast').addClass('opened');
            $(this).html('<i class="fa fa-caret-up"></i>');
            return;
        }
    });

</script>

{% endblock scripts %}
