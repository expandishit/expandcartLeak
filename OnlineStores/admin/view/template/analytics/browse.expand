{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block headelements %}
    {#{% include "includes/buttons_top.expand" %}#}
{% endblock headelements %}

{% block content %}

    <form class="form" action="{{ links['submit'] }}">
        <div class="row">
            <div class="panel panel-white">
                <div class="panel-body">
                    <div class="col-md-8">
                        <div class="topPages">
                            <table class="table table-hover datatable-highlight">
                                <thead>
                                <tr>
                                    <th>{{ lang('text_link') }}</th>
                                    <th>{{ lang('text_visits') }}</th>
                                </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-4 onlineUsers">
                        <div class="">
                            <div class="media no-margin">
                                <div class="media-body text-center">
                                    <h3 class="no-margin text-semibold">{{ lang('text_online_now') }}</h3>
                                    <h3 class="no-margin text-semibold all"></h3>
                                </div>

                                <div class="clearfix"></div>
                                <br/>

                                <div class="row">
                                    <div class="col-sm-6 col-md-6">
                                        <div class="panel bg-success-400 has-bg-image no-margin"
                                             style="padding: 10px 20px;">
                                            <div class="media no-margin">
                                                <div class="media-left media-middle">
                                                    <i class="fas fa-laptop opacity-75 fa-2x"></i>
                                                </div>

                                                <div class="media-body text-right">
                                                    <h3 class="no-margin desktop"></h3>
                                                    <span class="text-uppercase text-size-mini">{{ lang('text_desktop') }}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6 col-md-6">
                                        <div class="panel bg-success-400 has-bg-image no-margin"
                                             style="padding: 10px 20px;">
                                            <div class="media no-margin">
                                                <div class="media-left media-middle">
                                                    <i class="fas fa-mobile-alt opacity-75 fa-2x"></i>
                                                </div>

                                                <div class="media-body text-right">
                                                    <h3 class="no-margin mobile"></h3>
                                                    <span class="text-uppercase text-size-mini">{{ lang('text_mobile') }}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-body">
                    <div class="collapse in" id="panel2">
                        <div class="map-container map-world-markers"></div>
                    </div>
                </div>
            </div>

            {#<div class="panel panel-white hide">
                <div class="panel-heading">
                    <h6 class="panel-title"><span class="text-bold">Visits of the current week</span>
                    </h6>
                    <div class="heading-elements not-collapsible">
                        <ul class="icons-list">
                            <li><a data-action="collapse" class=""></a></li>
                        </ul>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="collapse in" id="panel2">
                        <div class="chart-container">
                            <table id="visitsGrid" class="table table-hover datatable-highlight">
                                <thead>
                                <tr>
                                    <th>Day</th>
                                    <th>Number of Visits</th>
                                </tr>
                                </thead>
                                <tbody>
                                {% for day in VisitTimeGetByDayOfWeek %}
                                    <tr>
                                        <td>{{ day['label'] }}</td>
                                        <td>{{ day['nb_visits'] }}</td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-white hide">
                <div class="panel-heading">
                    <h6 class="panel-title"><span class="text-bold">Visits Details</span>
                    </h6>
                    <div class="heading-elements not-collapsible">
                        <ul class="icons-list">
                            <li><a data-action="collapse" class=""></a></li>
                        </ul>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="collapse in" id="panel2">
                        <div class="chart-container">
                            <table id="visitsGrid" class="table table-hover datatable-highlight">
                                <thead>
                                <tr>
                                    <th>Ip</th>
                                    <th>Visit duration</th>
                                    <th>Referrer</th>
                                    <th>Device</th>
                                    <th>Operating System</th>
                                    <th>Browser</th>
                                    <th>Browser Version</th>
                                    <th>Browser Family</th>
                                    <th>Continent</th>
                                    <th>Country</th>
                                    <th>City</th>
                                </tr>
                                </thead>
                                <tbody>
                                {% for visit in getLastVisitsDetails %}
                                    <tr>
                                        <td>
                                            <a href="{{ link('analytics/analytics/visitorProfile', 'visitorId=' ~ visit['visitorId']) }}">
                                                {{ visit['visitIp'] }}
                                            </a>
                                        </td>
                                        <td style="direction: ltr;">{{ visit['visitDurationPretty'] }}</td>
                                        <td>
                                            {{ visit['referrerType'] == 'direct' ? visit['referrerTypeName'] : visit['referrerName'] }}
                                        </td>
                                        <td>{{ visit['deviceType'] }}</td>
                                        <td>{{ visit['operatingSystem'] }}</td>
                                        <td>{{ visit['browserName'] }}</td>
                                        <td>{{ visit['browserVersion'] }}</td>
                                        <td>{{ visit['browserFamilyDescription'] }}</td>
                                        <td>{{ visit['continent'] }}</td>
                                        <td>{{ visit['country'] }}</td>
                                        <td>{{ visit['city'] }}</td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>#}
        </div>
    </form>

    {% set cancel = link('sale/coupon') %}

    <!-- Lower Buttons -->
    {#{% include "includes/buttons_bottom.expand" %}#}
    <!-- End Lower Buttons -->


{% endblock %}

{% block scripts %}

    <script type="text/javascript" src="view/assets/js/plugins/maps/jvectormap/jvectormap.min.js"></script>
    <script type="text/javascript" src="view/assets/js/plugins/maps/jvectormap/map_files/world.js"></script>
    <script type="text/javascript" src="view/assets/js/plugins/maps/jvectormap/map_files/countries/usa.js"></script>
    <script type="text/javascript" src="view/assets/js/plugins/maps/jvectormap/map_files/countries/germany.js"></script>
    <script type="text/javascript" src="view/assets/demo_data/maps/vector/gdp_demo_data.js"></script>

    <script>


        var visitorsMap = null;

        var count = 0;
        var fireInterval = false;

        function renderOnline(o) {
            $('.onlineUsers .all').html('' + o['count']);
            $('.onlineUsers .desktop').html('' + o['desktop']);
            $('.onlineUsers .mobile').html('' + o['mobile']);
        }

        function renderTopPages(tp) {
            // Temporary table renderer

            $('.topPages table tbody').html('');

            var pages = '';

            for (p in tp) {
                var page = tp[p];

                pages += '<tr>' +
                    '<td class="col-md-9" style="direction: ltr;text-align: {{ lang('code') == 'ar' ? 'right' : 'left' }};"><a href="' + p + '" target="_blank">' + p + '</a></td>' +
                    '<td class="col-md-3">' + page + '</td>' +
                    '</tr>';
            }


            $('.topPages table tbody').append(pages);
        }


        $(document).ready(function () {
            $.ajax({
                url: '{{ link('analytics/live/getMapMarkers') }}',
                dataType: 'json',
                async: false,
                success: function (response) {

                    renderOnline(response['online']);
                    renderTopPages(response['topPages']);

                    visitorsMap = new jvm.WorldMap({
                        container: $('.map-world-markers'),
                        zoomOnScroll: false,
                        map: 'world_mill_en',
                        backgroundColor: 'transparent',
                        scaleColors: ['#C8EEFF', '#0071A4'],
                        normalizeFunction: 'polynomial',
                        regionStyle: {
                            initial: {
                                fill: '#D6E1ED'
                            }
                        },
                        hoverOpacity: 0.7,
                        hoverColor: false,
                        markerStyle: {
                            initial: {
                                r: 7,
                                'fill': '#336BB5',
                                'fill-opacity': 0.8,
                                'stroke': '#fff',
                                'stroke-width': 1.5,
                                'stroke-opacity': 0.9
                            },
                            hover: {
                                'stroke': '#fff',
                                'fill-opacity': 1,
                                'stroke-width': 1.5
                            }
                        },
                        focusOn: {
                            x: 0.5,
                            y: 0.5,
                            scale: 2
                        },
                        markers: response['data'],
                        onMarkerLabelShow: function (e, el, c) {
                            var details = response['data'][c]['details'];
                            var fullDetails = response['data'][c]['fullDetails'];

                            el.html(el.html() + '<br/>' + details['city'] + '/' + details['city'] +
                                '<br/>' +
                                '<img src="' + details['countryFlag'] + '" width="16" height="16" /> ' +
                                '<img src="' + details['browserIcon'] + '" width="16" height="16" /> ' +
                                '<img src="' + details['operatingSystemIcon'] + '" width="16" height="16" /> ' +
                                '<br/>' + details['pageTitle'] +
                                '<br/>Page Views : ' + fullDetails['actions'] +
                                '<br/>Since : ' + details['timeAgo'] + ' Minutes' +
                                '<br/>Visitor Local Time : ' + details['visitLocalTime']
                            );
                        }
                    });

                    fireInterval = true;
                }
            });

            function drawMap() {
                if (typeof visitorsMap.getMapObject() != 'undefined') {
                    $.ajax({
                        url: '{{ link('analytics/live/getMapMarkers') }}',
                        dataType: 'json',
                        async: false,
                        success: function (response) {
//                            visitorsMap.removeAllMarkers();
                            visitorsMap.remove();

//                            visitorsMap.addMarkers(response['data']);

                            visitorsMap = new jvm.WorldMap({
                                container: $('.map-world-markers'),
                                zoomOnScroll: false,
                                map: 'world_mill_en',
                                backgroundColor: 'transparent',
                                scaleColors: ['#C8EEFF', '#0071A4'],
                                normalizeFunction: 'polynomial',
                                regionStyle: {
                                    initial: {
                                        fill: '#D6E1ED'
                                    }
                                },
                                hoverOpacity: 0.7,
                                hoverColor: false,
                                markerStyle: {
                                    initial: {
                                        r: 7,
                                        'fill': '#336BB5',
                                        'fill-opacity': 0.8,
                                        'stroke': '#fff',
                                        'stroke-width': 1.5,
                                        'stroke-opacity': 0.9
                                    },
                                    hover: {
                                        'stroke': '#fff',
                                        'fill-opacity': 1,
                                        'stroke-width': 1.5
                                    }
                                },
                                focusOn: {
                                    x: 0.5,
                                    y: 0.5,
                                    scale: 2
                                },
                                markers: response['data'],
                                onMarkerLabelShow: function (e, el, c) {
                                    var details = response['data'][c]['details'];
                                    var fullDetails = response['data'][c]['fullDetails'];

                                    el.html(el.html() + '<br/>' + details['city'] + '/' + details['city'] +
                                        '<br/>' +
                                        '<img src="' + details['countryFlag'] + '" width="16" height="16" /> ' +
                                        '<img src="' + details['browserIcon'] + '" width="16" height="16" /> ' +
                                        '<img src="' + details['operatingSystemIcon'] + '" width="16" height="16" /> ' +
                                        '<br/>' + details['pageTitle'] +
                                        '<br/>Page Views : ' + fullDetails['actions'] +
                                        '<br/>Since : ' + details['timeAgo'] + ' Minutes' +
                                        '<br/>Visitor Local Time : ' + details['visitLocalTime']
                                    );
                                }
                            });

                            renderOnline(response['online']);
                            renderTopPages(response['topPages']);
                        }
                    });
                }
            }

            var intervalId;
            $(window).focus(function () {
                if (!intervalId)
                    intervalId = setInterval(drawMap, 5000);
            });

            $(window).blur(function () {
                clearInterval(intervalId);
                intervalId = 0;
            });
        });

    </script>

{% endblock %}
