{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}

{% block title %}
    {{ lang('heading_title', 'module/buyer_subscription_plan') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'module/buyer_subscription_plan/side_menu.expand' with {'expand': '#buyer_subscription_plan', 'active': '#subscriptions'} %}
{% endblock secondarymenu %}

{% block headelements %}
    <span class="headLinksEffect">
        <a href="{{ link('sale/subscription/create', '', 'SSL') }}" class="btn btn-success btn-labeled btn-xs"><b><i class="icon-plus3"></i></b> {{ lang('btn_new_subscription') }}</a>
    </span>
{% endblock headelements %}

{% block content %} 
<div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="collapse in">
                    <table id="subscriptions-datatable" class="table table-hover datatable-highlight">
                        <thead>
                            <tr>
                                <th></th>
                                <th>{{ lang('column_title') }}</th>
                                <th>{{ lang('column_status') }}</th>
                                <th>{{ lang('column_price') }}</th>
                                <th>{{ lang('column_validity_period') }}</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>


{% endblock %}

{% block scripts %}
    <script type="text/javascript">

    var data = JSON.parse('{{ subscriptions|json_encode|e('js') }}');

        $(document).ready(function () {
            $.extend($.fn.dataTable.defaults, {
                autoWidth: false,
                dom: '<"datatable-header"fB><"datatable-scroll"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
            });

            // Reorder events
            var table = $('#subscriptions-datatable').DataTable({

                data: data,     
                
                language: locales['dt_language'],
                
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },

                buttons: [
                    {
                        text: "<i class='icon-trash'></i>",
                        className: 'btn btn-default bulk-delete disabled',
                        action: function (e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function (item) {
                                selectedIds.push(item.subscription_id);
                            });
                            if (selectedIds.length > 0) {
                                confirmMessage(function () {
                                    $.ajax({
                                        url: "{{ link('sale/subscription/delete') }}",
                                        type: 'post',
                                        data: {selected_ids: selectedIds},
                                        success: function (resp) {
                                            var response = JSON.parse(resp);
                                            console.log(response);
                                            console.log(dt);
                                            if (response.success == '1')
                                            {
                                                console.log('ss')
                                                notify('Success', 'success', response.success_msg);
                                                dt.rows('.selected').remove().draw();
                                                table.rows('.selected').remove().draw();
                                            }
                                            else
                                            {
                                                notify('error', 'warning', response.error);
                                            }
                                        }
                                    });
                                });
                            }
                        }
                    },
                    {
                        extend: 'collection',
                        text: '<i class="icon-drawer-out"></i>',
                        className: 'btn btn-default btn-export',
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                text: locales['buttons']['copy'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'csvHtml5',
                                text: locales['buttons']['export2csv'],
                                fieldSeparator: ',',
                                extension: '.csv',
                                bom: "true",
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'excelHtml5',
                                text: locales['buttons']['export2excel'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'pdfHtml5',
                                text: locales['buttons']['export2pdf'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            }
                        ]
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="icon-grid3"></i>',
                        className: 'btn btn-default btn-colvis',
                        columns: [1,2,3]
                    }
                ],
                order: [[1, "asc"]],
                columns: [
                    {
                        title: `<input type="checkbox" class="styled" id="toggleSelectAll">`,
                        orderable: false,
                        data: "subscription_id",
                        width: "50px"
                    },
                    {
                        data: 'title',
                        render: function (data, type, row) {
                            return `<a href='{{ link("sale/subscription/edit") }}?subscription_id=`+ row['subscription_id'] +`'>${row['title']}</a>`;
                        }
                    },
                    {
                        data: 'status',
                        render: function (data, type, row) {
                            return  row['status'] == 1 ? '{{ lang("text_enabled")}}' : '{{ lang("text_disabled")}}';
                        }
                    },
                    {
                        data: 'price'
                    },
                    {
                        data: 'validity_period',
                        render: function (data, type, row){
                            let unit = row["validity_period_unit"] == 'day' ? "{{ lang('day') }}" : (row["validity_period_unit"] == 'month' ? "{{ lang('month') }}" : "{{ lang('year') }}");
                            return row['validity_period'] + ` ` + unit;
                        }
                    },
                ],
                columnDefs: [
                    {
                        orderable: false,
                        className: 'select-checkbox',
                        targets: 0
                    },
                    {
                        width: '30%',
                        targets: [1]
                    },
                    {
                        orderable: true,
                        className: 'sortable',
                        targets: [1, 2, 3, 4]
                    },
                    {
                        sortable: false,
                        searchable: false,
                        targets: [5]
                    },
                    {
                        targets: 5,
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href='{{ link("sale/subscription/edit") }}?subscription_id=`+ row['subscription_id'] +`'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                            <li><a class='removeItem' data-rowid="` + row['subscription_id'] + `"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ],
            });

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "title": locales['button_delete']
            });
            $(".btn-export").attr({
                "data-popup": "tooltip",
                "title": locales['button_export']
            });
            $(".btn-colvis").attr({
                "data-popup": "tooltip",
                "title": locales['button_colvis']
            });

            $('[data-popup="tooltip"]').tooltip();

            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });

            $('select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });

            table.on('select', function (e, objDT, type, indexes) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('deselect', function (e, objDT, type, indexes) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('search.dt', function (e, objDT) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            });

            $('#toggleSelectAll').click(function () {
                var checkbox = this;
                if (checkbox.checked == true) {
                    table.rows().select();
                } else {
                    table.rows().deselect();
                }
            });

            $('.removeItem').click(function () {

                var that = $(this);
                var rowId = that.data('rowid');

                confirmMessage(function () {
                    ajax("{{ link('sale/subscription/delete') }}", {selected_ids: [rowId]}, function (res) {
                        console.log(res);
                        var response = JSON.parse(res);
                        
                        if (response.success == '1')
                        {
                            table.row(that.parents('tr')).remove().draw();
                            notify('Success', 'success', response.success_msg);
                        }
                        else
                        {
                            notify('error', 'warning', response.error);
                        }
                    });
                });
            
            });


        });

    </script>
{% endblock %}
