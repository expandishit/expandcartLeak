{% extends "base.expand" %}

{% set dualMenuEnabled = true %}

{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}

{% block title %}
    {{ lang('ys_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'module/your_service/menu.expand' with {'active': '#requests'} %}
{% endblock secondarymenu %}

{% block headelements %}
    {% include "includes/buttons_top.expand" with {'cancel': links['cancel']} %}
{% endblock headelements %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="collapse in">
                <table id="datatableGrid" class="table table-hover datatable-highlight">
                    <thead>
                        <tr>
                            <th></th>
                            <th>{{ lang('column_requester') }}</th>
                            <th>{{ lang('column_email') }}</th>
                            <th>{{ lang('column_telephone') }}</th>
                            <th>{{ lang('column_service') }}</th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
{% endblock content %}
{% block scripts %}

    {{ parent() }}

    {% import _self as dtControls %}

    <script>
        var delLink = "{{ ajax_delete_link }}";
        $(document).ready(function () {
            $.extend($.fn.dataTable.defaults, {
                autoWidth: false,
                dom: '<"datatable-header"fB><"datatable-scroll"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, locales['all']]]
            });

            $(document).on('click', '.removeItem',function () {
                var that = $(this);
                var rowId = that.data('rowid');
                confirmMessage(function () {
                    ajax(delLink, {selected: [rowId]}, function (res) {
                        var response = JSON.parse(res);
                        
                        if (response.success == '1')
                        {
                            table.row(that.parents('tr')).remove().draw();
                            notify('Success', 'success', response.success_msg);
                        }
                        else
                        {
                            notify('error', 'warning', response.error);
                        }
                    });
                });
            });

            var table = $('#datatableGrid').DataTable({
                processing: true,
                serverSide: true,
                ajax: '{{ ajax_link }}',
                language: locales['dt_language'],
                rowId: "ys_request_id",
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                buttons: [
                    {
                        text: "<i class='icon-trash'></i>",
                        className: 'btn btn-default bulk-delete disabled',
                        action: function (e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function (item) {
                                selectedIds.push(item.coupon_id);
                            });
                            if (selectedIds.length > 0) {
                                confirmMessage(function () {
                                    $.ajax({
                                        url: delLink,
                                        type: 'POST',
                                        data: {selected: selectedIds},
                                        success: function (resp) {

                                            var response = JSON.parse(resp);

                                            if (response.success == '1')
                                            {
                                                notify('Success', 'success', response.success_msg);
                                                dt.rows('.selected').remove().draw();
                                            }
                                            else
                                            {
                                                notify('error', 'warning', response.error);
                                            }
                                        }
                                    });
                                });
                            }
                        }
                    },
                    {
                        extend: 'collection',
                        text: '<i class="icon-drawer-out"></i>',
                        className: 'btn btn-default btn-export',
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                text: locales['buttons']['copy'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'csvHtml5',
                                text: locales['buttons']['export2csv'],
                                fieldSeparator: ',',
                                extension: '.csv',
                                bom: "true",
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'excelHtml5',
                                text: locales['buttons']['export2excel'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'pdfHtml5',
                                text: locales['buttons']['export2pdf'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            }
                        ]
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="icon-grid3"></i>',
                        className: 'btn btn-default btn-colvis',
                        columns: [1,2,3,4]
                    }
                ],
                order: [[1, "asc"]],
                columns: [
                    {
                        title: `<input type="checkbox" class="styled" id="toggleSelectAll">`,
                        orderable: false,
                        data: "ys_request_id",
                        width: "50px"
                    },
                    {
                        data: 'requester'
                    },
                    {
                        data: 'email'
                    },
                    {
                        data: 'telephone'
                    },
                    {
                        data: 'service'
                    }
                ],
                columnDefs: [
                    {
                        orderable: false,
                        className: 'select-checkbox',
                        targets: 0
                    },
                    {
                        targets: 1,
                        searchable: true,
                        orderable: true,
                        render: function (data, type, row) {
                            if (row['requester_id'] == 0) {
                                return row['requester'] + " <strong>({{ lang('ys_visitor') }})</strong>";
                            }
                            return '<a href="{{ link("sale/customer/update?customer_id=") }}'+row['requester_id']+'" target="_blank">'+row['requester']+'</a>';
                        }
                    },
                    {
                        targets: 5,
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a class='removeItem' data-rowid="` + row['ys_request_id'] + `"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                            <li><a href="{{ link('module/your_service/info?request_id=') }}${row['ys_request_id']}" target="_blank"><i class='icon-eye'></i> ${locales['button_view']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ],
            });

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "title": locales['button_delete']
            });
            $(".btn-export").attr({
                "data-popup": "tooltip",
                "title": locales['button_export']
            });
            $(".btn-colvis").attr({
                "data-popup": "tooltip",
                "title": locales['button_colvis']
            });

            $('[data-popup="tooltip"]').tooltip();

            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });

            $('select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });

            table.on('select', function (e, objDT, type, indexes) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('deselect', function (e, objDT, type, indexes) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('search.dt', function (e, objDT) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            });

            $('#toggleSelectAll').click(function () {
                var checkbox = this;
                if (checkbox.checked == true) {
                    table.rows().select();
                } else {
                    table.rows().deselect();
                }
            });

        });
    </script>
{% endblock scripts %}