{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block headelements %}
    <button data-toggle="modal" data-target="#new-products-order-modal"
        data-source="insert-trigger" class="btn btn-success btn-labeled">
        <b><i class="icon-plus3"></i></b>{{lang('button_add_products_order')}}
    </button>
{% endblock headelements %}

{% block content %}

<div class="modal fade" id="new-products-order-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">{{ lang('button_add_products_order') }} </h4>
            </div>
            <div class="modal-body row">
                <div class="modal-errors col-md-12"></div>
                <form id="new-products-order-form"
                    method="post" enctype="multipart/form-data"
                    data-action="{{ link('module/products_orders/upload') }}">
                    <div class="col-md-12 form-group" id="title-group">
                        <label for="title" class="control-label">
                            {{ lang('entry_file_title') }}
                        </label>
                        <input type="text" class="form-control" id="title" name="title">
                        <span class="help-block"></span>
                        <span class="text-muted">{{ langempty('entry_file_title_help') }}</span>
                    </div>

                    <div class="col-md-12 form-group" id="file-group">
                        <label for="file" class="control-label text-semibold">
                            {{ lang('entry_file') }}
                        </label>

                        <input type="file" class="form-control file-input-file" id="products-file">

                        <span class="help-block"></span>
                        <span class="text-muted">{{ langempty('entry_file_note') }}</span>
                    </div>
                </form>
            </div>
            <div class="modal-footer text-left">
                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">
                    {{ lang('button_close') }}
                </button>
                <button type="button" class="btn btn-primary submit-form-trigger">
                    {{ lang('button_save') }}
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="view-products-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">{{ lang('button_add_products_order') }} </h4>
            </div>
            <div class="modal-body row">
                <div class="modal-errors col-md-12"></div>
                <table class="table table-hover" id="products-datatable" width="100%">
                    <thead>
                    <tr>
                        <th>{{ lang('product_title') }}</th>
                        <th>{{ lang('barcode') }}</th>
                        <th>{{ lang('current_quantity') }}</th>
                        <th>{{ lang('added_quantity') }}</th>
                        <th>{{ lang('old_quantity') }}</th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="view-unfound-products-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">{{ lang('button_add_products_order') }} </h4>
            </div>
            <div class="modal-body row">
                <div class="modal-errors col-md-12"></div>
                <table class="table table-hover" id="unfound-products-datatable" width="100%">
                    <thead>
                    <tr>
                        <th>{{ lang('barcode') }}</th>
                        <th>{{ lang('added_quantity') }}</th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-white">
    <div class="panel-heading">
        <h6 class="panel-title"><span
                    class="text-bold">{{ lang('orders_list') }}</span></h6>
        <div class="heading-elements not-collapsible">
            <ul class="icons-list">
                <li><a data-action="collapse" class=""></a></li>
            </ul>
        </div>
    </div>
    <div class="panel-body">
        <div class="collapse in" id="fields-panel">
            <table class="table table-hover" id="products-orders-datatable">
                <thead>
                <tr>
                    <!-- <th></th> -->
                    <th>{{ lang('file_title') }}</th>
                    <th>{{ lang('order_status') }}</th>
                    <th>{{ lang('entry_user') }}</th>
                    <th></th>
                </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>
<!-- End Form -->
<script>
let dt;
locales['products_stats'] = '{{ lang("products_stats") }}';
locales['info_button'] = '{{ lang("info_button") }}';
locales['unfounded_products'] = '{{ lang("unfounded_products") }}';

$(document).ready(function () {
    $('select').select2();

    var productDTInitailized = false;
    var unfoundProductDTInitailized = false;
    var cacheProductListLink = false;

    let productsOrders = $('#new-products-order-modal');
    let productsListModal = $('#view-products-modal');
    let unfoundProductsListModal = $('#view-unfound-products-modal');
    let productsOrdersForm = $('#new-products-order-form');

    let productsListLink = '{{ link("module/products_orders/listProducts?order_id=") }}';
    locales['switch_text_enabled'] = '{{ lang("switch_text_enabled") }}';
    locales['switch_text_disabled'] = '{{ lang("switch_text_disabled") }}';

    productsOrders.on('hide.bs.modal', (e) => {
        productsOrdersForm.find('input').val('');
        productsOrdersForm.find('textarea').val('');
    });

    productsListModal.on('show.bs.modal', (e) => {
        let r = $(e.relatedTarget), c = $(e.currentTarget);

        let d = r.data('order-id');

        let url = productsListLink + d;

        if (!productDTInitailized) {
            loadProducts(url);
            productDTInitailized = true;
        } else if (productDTInitailized) {
            productdt.ajax.url(url);

            productdt.ajax.reload();
        }
    });

    unfoundProductsListModal.on('show.bs.modal', (e) => {
        let r = $(e.relatedTarget), c = $(e.currentTarget);

        let d = r.data('order-id');

        let url = productsListLink + d;

        if (!unfoundProductDTInitailized) {
            loadUnfoundProducts(url);
            unfoundProductDTInitailized = true;
        } else if (unfoundProductDTInitailized) {
            unfoundproductdt.ajax.url(url);

            unfoundproductdt.ajax.reload();
        }
    });

    dt = $('#products-orders-datatable').DataTable({
        processing: true,
        serverSide: true,
        // stateSave: true,
        language: locales['dt_language'],
        dom: '<"datatable-header"f><"datatable-scroll"t><"datatable-footer"lip>',
        select: {
            style: 'multi',
            selector: 'td:first-child'
        },
        drawCallback: function () {
            $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
        },
        preDrawCallback: function() {
            $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
        },
        "ajax": {
            url: '{{ link("module/products_orders/list") }}',
            type: "post",
            error: function (e,m,l) {
                $(".datatables_country-error").html("");
                $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                $("#datatables_country_processing").css("display", "none");
            }
        },
        columns: [
            {
                data: "filename",
            },
            {
                data: "products",
                render: (d, t, r) => {
                    let p = JSON.parse(d);

                    let l = locales['products_stats'].replace(/:in/, Object.keys(p.in).length);
                    l = l.replace(/:out/, Object.keys(p.out).length);

                    return l;
                }
            },
            {data:"user"},
            {
                data: "id",
                render: function (d, t, r) {
                    return `<button
                        data-toggle="modal"
                        data-target="#view-products-modal"
                        data-order-id="${d}"
                        class="btn btn-xs btn-info">${locales['info_button']}</button>

                        <button
                        data-toggle="modal"
                        data-target="#view-unfound-products-modal"
                        data-order-id="${d}"
                        class="btn btn-xs btn-info">${locales['unfounded_products']}</button>`;
                }
            },
        ],
        "order": [[1, "asc"]],
    });

    function loadProducts(url) {
        productdt = $('#products-datatable').DataTable({
            processing: true,
            serverSide: true,
            // stateSave: true,
            language: locales['dt_language'],
            dom: '<"datatable-scroll"t><"datatable-footer"lip>',
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            drawCallback: function () {
                $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
            },
            preDrawCallback: function() {
                $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
            },
            "ajax": {
                url: url,
                type: "post",
                data: {'type': 'exists'},
                error: function (e,m,l) {
                    $(".datatables_country-error").html("");
                    $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                    $("#datatables_country_processing").css("display", "none");
                }
            },
            columns: [
                {data: "name",},
                {data: "barcode",},
                {data: "registered_quantity"},
                {data: 'added_quantity'},
                {data: 'old_quantity'},
            ],
            "order": [[1, "asc"]],
        });
    }

    function loadUnfoundProducts(url) {
        unfoundproductdt = $('#unfound-products-datatable').DataTable({
            processing: true,
            serverSide: true,
            // stateSave: true,
            language: locales['dt_language'],
            dom: '<"datatable-scroll"t><"datatable-footer"lip>',
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            drawCallback: function () {
                $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
            },
            preDrawCallback: function() {
                $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
            },
            "ajax": {
                url: url,
                type: "post",
                data: {'type': 'not-exists'},
                error: function (e,m,l) {
                    $(".datatables_country-error").html("");
                    $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                    $("#datatables_country_processing").css("display", "none");
                }
            },
            columns: [
                {
                    data: "barcode",
                },
                {data: 'quantity'},
            ],
            "order": [[1, "asc"]],
        });
    }

    var spinner = function () {

        let sp = $('#spinner', 'body');

        if (sp.length > 0) {
            sp.remove();
        } else {
            $('body').append(`<div id="spinner" style="display: flex;
                position: absolute;
                justify-content: center;
                font-size: 50px;
                text-align: center;
                left: 0;
                top: 0;
                background-color: rgba(0,0,0,0.5);
                z-index: 100000;
                align-items: center;
                height: 100%;"
                class="col-md-12 form-group"><i class="fa fa-spinner fa-spin" style=""></i></div>`);
        }
    };

    $('.submit-form-trigger').click(function () {

        spinner();

        $('.submit-form-trigger').attr('disabled', true);

        productsOrders.find('.modal-errors').html('');

        var formData = new FormData();
        formData.append('file', $('#products-file')[0].files[0]);
        formData.append('filename', $('#title').val());

        $.ajax({
            url: productsOrdersForm.attr('data-action'),
            method: 'POST',
            dataType: 'JSON',
            data: formData,
            processData: false,
            contentType: false,
            success: function (r) {
                spinner();
                if (typeof r.status !== 'undefined' && r.status === 'OK') {
                    dt.ajax.reload();

                    productsOrders.modal('toggle');
                    $('.submit-form-trigger').attr('disabled', false);
                    return;
                }

                for (i in r.errors) {
                    let e = r.errors[i];

                    productsOrders.find('.modal-errors').append(`<div class="alert alert-danger">${e}</div>`);
                }

                $('.submit-form-trigger').attr('disabled', false);
            }
        });

    });
});

</script>
{% endblock %}