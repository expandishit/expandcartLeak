
<div id="modal_remote" class="modal">
    <div class="modal-dialog modal-full">
        <div class="modal-content">

            <div class="modal-body"></div>

        </div>
    </div>
</div>

<div id="modal_update" class="modal">
    <div class="modal-dialog modal-full">
        <div class="modal-content">

            <div class="modal-body"></div>

        </div>
    </div>
</div>

<div style="padding: 20px">
    <span class="headLinksEffect">
        <a href="{{ link('module/product_review/insert_review', '', 'SSL') }}" class="btn btn-success btn-labeled btn-xs"><b><i class="icon-plus3"></i></b> {{ lang('btn_new_review') }}</a>
    </span>
</div>

<div class="tab-pane fade in active" id="gridView">
    <div class="features-table-container rounded">
        <div class="collapse in">
            <table id="settingsDatatableGrid" class="table table-hover datatable-highlight">
                <thead>
                    <tr>
                        <th></th>
                        <th>{{ lang('column_product') }}</th>
                        <th>{{ lang('column_author') }}</th>
                        <th>{{ lang('column_rating') }}</th>
                        {#<th>{{ lang('column_status') }}</th>#}
                        <th>{{ lang('column_date_added') }}</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

    {% import _self as dtControls %}

    <script>

        var reviewsTable;

        $(document).ready(function () {

            reviewsTable = $('#settingsDatatableGrid').DataTable({
                autoWidth: false,
                dom: '<"datatable-header"fB><"datatable-scroll-wrap"t><"datatable-footer"lip>',
                language: {
                    ...locales['dt_language'],
                    search: ""
                },
                lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]],
                ajax: {
                    url: '{{ link('module/product_review/reviewsDtHandler') }}',
                    type: 'post',
                    error: function (e, m, l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                drawCallback: function () {
                    $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').addClass('dropup');
                },
                preDrawCallback: function() {
                    $(this).find('tbody tr').slice(-3).find('.dropdown, .btn-group').removeClass('dropup');
                },
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                buttons: [
                    {
                        extend: 'colvis',
                        text: `<i class="fas fa-columns"></i> {{lang('dtb_custom_col')}}`,
                        className: 'btn-colvis',
                        columns: [1,2,3,4]
                    },// cols
                    {
                        extend: 'collection',
                        text: '<i class="fas fa-file-download"></i> {{lang("dtb_export_table")}}',
                        className: 'btn-export {{ base.plan_trial_id == 3 ? "disabled plan-lock-btn" : ""}}',
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                text: locales['buttons']['copy'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'csvHtml5',
                                text: locales['buttons']['export2csv'],
                                fieldSeparator: ',',
                                extension: '.csv',
                                bom: "true",
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'excelHtml5',
                                text: locales['buttons']['export2excel'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'pdfHtml5',
                                text: locales['buttons']['export2pdf'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            }
                        ]
                    },// export
                    {
                        text: "<i class='far fa-trash-alt'></i> {{lang('dtb_delete')}}",
                        className: 'bulk-delete disabled',
                        action: function (e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function (item) {
                                selectedIds.push(item.review_id);
                            });
                            if (selectedIds.length > 0) {
                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('module/product_review/reviewsDtDelete') }}',
                                        type: 'post',
                                        data: {selected: selectedIds},
                                        success: function (resp) {
                                            var response = JSON.parse(resp);

                                            if (response.success == '1') {
                                                dt.rows('.selected').remove().draw();
                                            }
                                        }
                                    });
                                });
                            }
                        }
                    },// delete
                ],
                order: [[1, "asc"]],
                columns: [
                    {
                        title: `<input type="checkbox" class="styled" id="toggleSelectAll">`,
                        orderable: false,
                        data: "review_id",
                        width: "50px",
                        render: function ( data, type, row ) {
                            return `<input type="checkbox" class="select-checkbox">`
                        }
                    },
                    {
                        data: 'name',
                        render: function (data, type, row) {
                            return `<a href="{{ link('module/product_review/update_review?review_id=') }}${row['review_id']}">${row['name']}</a>`;
                        }
                    },
                    {data: 'author'},
                    {
                        data: 'rating',
                        render: function ( data, type, row ) {
                            $html = '';

                            for ( i=0; i < 5; i++ )
                            {
                                var $rating = parseInt(row['rating']);

                                if ( i < $rating )
                                {
                                    $html += '<i class="icon-star-full2"></i>';
                                }
                                else
                                {
                                    $html += '<i class="icon-star-empty3"></i>';
                                }

                            }

                            return $html;
                        }
                    },
    //                    {data: 'status',},
                    {data: 'date_added'},
                    {data: 'review_id'},
                ],
                columnDefs: [
                    {
                        width: '30%',
                        targets: [1]
                    },
                    {
                        orderable: true,
                        className: 'sortable',
                        targets: [1, 2]
                    },
                    {#{#}
                        {#targets: 4,#}
                        {#orderable: false,#}
                        {#render: function (data, type, row) {#}
                            {#var status = (data == "1" ? 'checked="checked"' : '');#}
                            {#return `{{ dtControls.statusSwitch("${row.review_id}", "${status}") }}`;#}
                        {#}#}
                    {#},#}
                    {
                        sortable: false,
                        searchable: false,
                        targets: 5,
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href="{{ link('module/product_review/update_review') }}?review_id=${row['review_id']}"><i class="icon-pencil7"></i> ${locales['button_edit']}</a></li>
                                            <li><a onclick="removeReview(this)" data-rowid="${row['review_id']}"><i class='far fa-trash-alt'></i> ${locales['button_delete']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ],
            });

            $('.product-list .product-list-title .btns').prepend(`<a href="{{ link('module/product_review/insert_review') }}" class="theme-btn rounded-primary-btn">{{ lang('btn_new_review') }}</a>`)

            // $('[data-popup="tooltip"]').tooltip();
            // $('[data-toggle="tooltip"]').tooltip();

            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });

            $('select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });

            reviewsTable.on('select', function (e, objDT, type, indexes) {
                if (reviewsTable.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('deselect', function (e, objDT, type, indexes) {
                if (reviewsTable.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('search.dt', function (e, objDT) {
                if (reviewsTable.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            });

            $('#toggleSelectAll').click(function () {
                var checkbox = this;
                if (checkbox.checked == true) {
                    reviewsTable.rows().select();
                } else {
                    reviewsTable.rows().deselect();
                }
            });

            $('#modal_remote').on('show.bs.modal', function () {
                $(this).find('.modal-body').load('module/product_review/insert_review', function () {

                    $('select').select2({
                        minimumResultsForSearch: Infinity
                    });
                });
            });

            $('#modal_update').on('show.bs.modal', function (e) {

                var remoteLink = $(e.relatedTarget).data('remotelink');

                $(this).find('.modal-body').load(remoteLink, function () {

                    $('select').select2({
                        minimumResultsForSearch: Infinity
                    });
                });
            });

            $('#modal_update, #modal_remote').on('hidden.bs.modal', function () {
                reviewsTable.ajax.reload();
            })

        });

        function removeReview(row)
        {
            console.log('in')
            var that = $(row);
            var rowId = that.data('rowid');

            confirmMessage(function () {
                ajax("{{ link("module/product_review/reviewsDtDelete") }}", {selected: [rowId]}, function (res) {
                    var response = JSON.parse(res);
                    if (response.success == '1') {
                        reviewsTable.row(that.parents('tr')).remove().draw();
                    }
                });
            });
        }

    </script>

{% macro statusSwitch(id, status) %}
    <div class="checkbox checkbox-switch">
        <label>
            <input type="checkbox" class="switch" data-on-color="success"
                   onchange="changeStatus({{ id }}, this.checked);" data-on-text="{{ lang('switch_text_enabled') }}"
                   data-off-text="{{ lang('switch_text_disabled') }}" {{ status }} >
        </label>
    </div>
{% endmacro statusSwitch %}
