{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}


{% block title %}
    {{ heading_title }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}


{% block secondarymenu %}
    {% include 'module/delivery_slot/menu.expand' with {'active': '#date'} %}
{% endblock secondarymenu %}



{% block content %}
    <style>
        .ui-datepicker {
            z-index: 99999 !important;
        }
    </style>
    <div id="modal_add" class="modal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form class="add_new_slot_form">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">{{ lang('btn_new_delivery_slot') }}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="addResult"></div>
                        <div class="form-group">
                            <label for="ds_name_date" class="control-label">{{lang('entry_delivery_slot')}} <span class="required ">*</span> </label>
                            <input id="ds_name_date" name="delivery_slot[delivery_slot]" class="form-control" />
                            <span class="help-block"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="ds_time_start" class="control-label">{{lang('entry_time_start')}} <span class="required ">*</span>  </label>
                                    <input id="ds_time_start" name="delivery_slot[time_start]" class="form-control time " />
                                    <span class="help-block"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="ds_time_end" class="control-label">{{lang('entry_time_end')}} <span class="required ">*</span>  </label>
                                    <input id="ds_time_end"  name="delivery_slot[time_end]" class="form-control time" />
                                    <span class="help-block"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="ds_orders_slot" class="control-label">{{lang('entry_orders_count')}} <span class="required ">*</span>  </label>
                            <input id="ds_orders_slot" name="delivery_slot[total_orders]" class="form-control touchy" />
                            <span class="help-block"></span>
                        </div>

                        <div class="form-group" id="status-group">
                            <label class="control-label">{{ lang('entry_status') }}</label>
                            <div class="checkbox checkbox-switchery">
                                <label>
                                    <input type="checkbox" onchange="changeStatus(this);" name="delivery_slot[status]" class="switchery" {{ status in ['1', 1, 'on'] ? 'checked' }}>
                                    <span class="switchery-status">{{ status in [1, '1', 'on'] ? lang('text_enabled') : lang('text_disabled') }}</span>
                                </label>
                            </div>
                        </div>
                        <input type="hidden" name="delivery_slot[day_id]" value="{{ day_id }}">

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary add_new_slot"><i class="far fa-save fa-lg position-left"></i>{{ lang('button_save') }}</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
     <div class="row">

                    <div class="col-md-12">
                        <div class="panel panel-white">
                            <div class="panel-heading">
                                <h6 class="panel-title"><span class="text-bold">{{ lang('text_new_delivery_slot')}}</span></h6>
                                <div class="heading-elements not-collapsible">
                                    <ul class="icons-list">
                                        <li><a data-action="collapse" class=""></a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div class="collapse in" id="panel1">
                                    <div class="form-group" id="">
                                        <div class="tabbable nav-tabs-vertical nav-tabs-right">
                                            <div class="tab-content">
                                                    <div class="tab-pane has-padding active" id="langTab">
                                                        <table id="datatableGrid" class="table table-hover datatable-highlight">
                                                            <thead>
                                                            <tr>
                                                                <th></th>
                                                                <th>{{ lang('column_date') }}</th>
                                                                <th>{{ lang('column_slot') }}</th>
                                                                <th>{{ lang('column_orders_count') }}</th>
                                                                <th>{{ lang('column_orders_reserved') }}  </th>
                                                                <th>{{ lang('column_orders_available') }} </th>
                                                                <th></th>
                                                            </tr>
                                                            </thead>
                                                        </table>
                                                    </div>
                                            </div>

                                            <ul class="nav nav-tabs nav-tabs-highlight nav-tabs-lang">
                                                {% for key,day in dayes %}
                                                    <li class="{% if(day == currentDay) %} active {% endif %}">
                                                        <a href="{{ link('module/delivery_slot/insert?day='~day~'&day_id='~key) }}"  aria-expanded="false">
                                                            <div> {{ day}}</div>
                                                        </a>
                                                    </li>
                                                {% endfor %}
                                            </ul>
                                        </div>
                                    </div>
                                    <a href="" class="btn btn-primary" data-toggle="modal" data-target="#modal_add"><i class="icon-plus3"></i> Add New Slot</a>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
    <script>

        function changeStatus(checkbox)
        {
            var self = $(checkbox);
            var switch_status = self.siblings('.switchery-status');

            if ( self.is(':checked') )
            {
                switch_status.html("{{ lang('text_enabled') }}");
            }
            else
            {
                switch_status.html("{{ lang('text_disabled') }}");
            }
        }

        $('.touchy').TouchSpin({
            max: Infinity
        });
    </script>

{% endblock content %}


{% block scripts %}

    {{ parent() }}

    {% import _self as dtControls %}

    <script>



        var data = JSON.parse('{{ slots|json_encode|e('js') }}');

        $(document).ready(function () {
            $.extend($.fn.dataTable.defaults, {
                autoWidth: false,
                dom: '<"datatable-header"fB><"datatable-scroll"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
            });

            // Reorder events
            var table = $('#datatableGrid').DataTable({
                language: locales['dt_language'],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                data: data,
                buttons: [
                    {
                        text: "<i class='icon-trash'></i>",
                        className: 'btn btn-default bulk-delete disabled',
                        action: function (e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function (item) {
                                selectedIds.push(item.slot_id);
                            });
                            if (selectedIds.length > 0) {
                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('module/delivery_slot/dtDelete') }}',
                                        type: 'post',
                                        data: {selected: selectedIds},
                                        success: function (resp) {

                                            var response = JSON.parse(resp);

                                            if (response.success == '1')
                                            {
                                                notify('Success', 'success', response.success_msg);
                                                dt.rows('.selected').remove().draw();
                                            }
                                            else
                                            {
                                                notify('error', 'warning', response.error);
                                            }
                                        }
                                    });
                                });
                            }
                        }
                    },
                    {
                        extend: 'collection',
                        text: '<i class="icon-drawer-out"></i>',
                        className: 'btn btn-default btn-export',
                        buttons: [
                            {
                                extend: 'copyHtml5',
                                text: locales['buttons']['copy'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'csvHtml5',
                                text: locales['buttons']['export2csv'],
                                fieldSeparator: ',',
                                extension: '.csv',
                                bom: "true",
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'excelHtml5',
                                text: locales['buttons']['export2excel'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            },
                            {
                                extend: 'pdfHtml5',
                                text: locales['buttons']['export2pdf'],
                                exportOptions: {
                                    columns: ':visible'
                                }
                            }
                        ]
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="icon-grid3"></i>',
                        className: 'btn btn-default btn-colvis',
                        columns: [1,2,3]
                    }
                ],
                order: [[1, "asc"]],
                columns: [
                    {
                        title: `<input type="checkbox" class="styled" id="toggleSelectAll">`,
                        orderable: false,
                        data: "slot_id",
                        width: "50px"
                    },
                    {
                        data: 'day',

                    },
                    {
                        data : 'slot_desc'
                    },
                    {
                        data : 'total_orders'
                    },
                    {
                        data : 'reserved'
                    },
                    {
                        data : 'balance'
                    },
                ],
                columnDefs: [
                    {
                        orderable: false,
                        className: 'select-checkbox',
                        targets: 0
                    },
                    {
                        orderable: true,
                        width: '30%',
                        targets: [1]
                    },
                    {
                        orderable: true,
                        className: 'sortable',
                        targets: [6]
                    },
                    {
                        targets: 6,
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href='{{ update }}?slot_id=`+ row['slot_id'] +`'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                            <li><a class='removeItem' data-rowid="` + row['slot_id'] + `"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ],
            });

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "title": locales['button_delete']
            });
            $(".btn-export").attr({
                "data-popup": "tooltip",
                "title": locales['button_export']
            });
            $(".btn-colvis").attr({
                "data-popup": "tooltip",
                "title": locales['button_colvis']
            });

            $('[data-popup="tooltip"]').tooltip();

            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });

            $('select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });

            table.on('select', function (e, objDT, type, indexes) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('deselect', function (e, objDT, type, indexes) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('search.dt', function (e, objDT) {
                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            });

            $('#toggleSelectAll').click(function () {
                var checkbox = this;
                if (checkbox.checked == true) {
                    table.rows().select();
                } else {
                    table.rows().deselect();
                }
            });

            $('.removeItem').click(function () {

                var that = $(this);
                var rowId = that.data('rowid');

                confirmMessage(function () {
                    ajax("{{ link("module/delivery_slot/dtDelete") }}", {selected: [rowId]}, function (res) {
                        var response = JSON.parse(res);

                        if (response.success == '1')
                        {
                            table.row(that.parents('tr')).remove().draw();
                            notify('Success', 'success', response.success_msg);
                        }
                        else
                        {
                            notify('error', 'warning', response.error);
                        }
                    });
                });
            });


            $('#modal_update').on('show.bs.modal', function (e) {

//                var attrId = $(this).data('attrid');

                var remoteLink = $(e.relatedTarget).data('remotelink');

                $(this).find('.modal-body').load(remoteLink, function () {

                    $('select').select2({
                        minimumResultsForSearch: Infinity
                    });
                });
            });

            $("body").on("submit",".add_new_slot_form",function(){
                $.ajax({
                    url: "{{ action }}",
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (resp)
                    {
                        var resp = JSON.parse(resp);
                        if (resp.success == '1') {
                            notify('Success', 'success', resp.success_msg);
                            $('#modal_add').modal('hide');
                            location.reload();
                        } else{
                            var html = '<div class="alert alert-danger">';
                            var lenthData = resp.errors.length;
                            if(lenthData > 0){
                                for (var i = 0; i < lenthData; i++)
                                {
                                    html += '<p>'+resp.errors[i]+'</p>';
                                }
                            }
                            html +="</div>";
                            $(".addResult").html(html);
                        }

                    }
                });
                return false;
            });

            $('.time').timepicker({
                timeFormat: 'hh:mm TT' ,
                ampm: true
            });

        });

    </script>
{% endblock scripts %}

