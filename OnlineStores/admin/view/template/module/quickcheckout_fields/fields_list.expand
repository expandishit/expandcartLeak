{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'module/quickcheckout_fields/menu.expand' with {'expand': '#quickcheckout', 'active': '#fields'} %}
{% endblock secondarymenu %}

{% block headelements %}
<span class="headLinksEffect">
    <a href="{{ add }}" class="btn btn-success btn-labeled btn-xs "><b><i class="icon-plus3"></i></b> {{ lang('button_add') }}</a>
</span>
{% endblock headelements %}

{% block content %}
<div class="container-detached">
  <div class="tab-pane fade in active" id="gridView">
      <div class="panel panel-default">
          <div class="collapse in">
              <table id="datatable-fields" class="table table-hover datatable-highlight">
                  <thead>
                  <tr>
                      <th></th>
                      <th>{{ lang('column_title') }}</th>
                      <th>{{ lang('column_section') }}</th>
                      <th>{{ lang('column_type') }}</th>
                      <th class="do-not-export-excel do-not-export-pdf do-not-export-csv"></th>
                  </tr>
                  </thead>
              </table>
          </div>
      </div>
  </div>
</div>

{% endblock content %}

{% block scripts %}

<script>
    $(document).ready(function() {

        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });
    });

    var warehouseTable;

    Array.prototype.remove = function(item)
    {
        // index will have -1 if item does not exist
        // else it will have the index of 1st item found in array
        var index = this.indexOf(item); 

        if (index > -1)
        {
            // splice() method is used to add/remove items(s) in array
            this.splice(index, 1); 
        }

        return index;
    }

    var selectedIds = [];
    $(document).ready(function(){
        // showHideOrderStatuses();

        // $('.hide-on-grid-view').hide();

        // $('select').select2({dropdownAutoWidth : true});

        warehouseTable = $('#datatable-fields').DataTable({
                processing: true,
                serverSide: true,
                stateSave: true,
                rowId: "id",
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                "ajax": {
                    url: '{{ link('module/quickcheckout_fields/dtHandler') }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [
                    {
                        text: "<i class='icon-trash'></i>",
                        className: 'btn btn-danger bulk-delete',
                        action: function(e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            selectedRows.each(function(item) {
                                selectedIds.push(item.id);
                            });
                            if (selectedIds.length > 0){
                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('module/quickcheckout_fields/dtDelete') }}',
                                        type: 'post',
                                        data: {id: selectedIds},
                                        success: function(){
                                            reloadDT();
                                        }
                                    });
                                });
                            }
                        }
                    }
                ],

                columns: [
                    {
                        title:`<input type="checkbox" class="styled" onchange='toggleSelectAll(this);'>`,
                        orderable: false,
                        width: "50px",
                        data: 'id',
                        render: function(data, type, row) {
                            return `<input type="checkbox" row-id="${row['id']}" class="select-checkbox">`;
                        }
                    },
                    {
                        data: "field_title",
                        render: function (data, type, row) {
                            return `<a href="{{ link('module/quickcheckout_fields/edit?id=') }}${row['id']}">${row['field_title']}</a>`;
                        }
                    },
                    {
                        data: "section"
                    },
                    {
                        data: "field_type"
                    }
                ],
                order: [[1, "desc"]],
                columnDefs: [
                    {
                        targets: 2,
                        className: 'ltr text-left'
                    },
                    {
                        targets: 4,
                        orderable: false,
                        width: "10px",
                        className: "text-center",
                        render: function (data, type, row) {
                            
                            var deleteButton = `<li><a onclick="removeItem(${row['id']})"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>`;
                            var canDelete = row['can_delete'];
                           
                            if(canDelete != 'undefined' && canDelete == 'no')
                            {
                                deleteButton = '';
                            }
                            
                            return `<ul class="icons-list pull-right">
                                        <li class="dropdown">
                                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                                <i class="icon-menu9"></i>
                                            </a>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li><a href='{{ link('module/quickcheckout_fields/edit') }}?id=${row['id']}#tab/general'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
{#                                                <li><a onclick="removeItem(${row['id']})"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>#}
                                                  {# in some cases we need customer to do not remove field so we add  canDelete to check if field can delete or not#}                          
                                                  ${deleteButton}
                                            </ul>
                                        </li>
                                    </ul>
                                `;
                            
                        }
                    }
                ]
            });

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "title": locales['button_delete']
            });

            $('[data-popup="tooltip"]').tooltip();

            // On each draw, loop over the `detailRows` array and show any child rows
            warehouseTable.on('draw', function () {
                $(".switch").bootstrapSwitch();
                $(".styled, .multiselect-container input").uniform({
                    radioClass: 'choice'
                });
            });

            warehouseTable.on( 'select', function ( e, objDT, type, indexes ) {
                if ( warehouseTable.rows( '.selected' ).any() )
                {
                    $(".bulk-delete").removeClass('disabled');
                }
                else
                {
                    $(".bulk-delete").addClass('disabled');
                }

            })
            .on( 'deselect', function ( e, objDT, type, indexes ) {
                if ( warehouseTable.rows( '.selected' ).any() )
                {
                    $(".bulk-delete").removeClass('disabled');
                }
                else
                {
                    $(".bulk-delete").addClass('disabled');

                }
            })
            .on( 'search.dt', function (e, objDT) {
                if ( warehouseTable.rows( '.selected' ).any() )
                {
                    $(".bulk-delete").removeClass('disabled');
                }
                else
                {
                    $(".bulk-delete").addClass('disabled');
                }
            });

            $('.dataTables_length select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });

        function removeItem(id)
        {
            confirmMessage(
                function ()
                {
                    $.ajax({
                        url: "{{ link('module/quickcheckout_fields/dtDelete') }}",
                        type: "post",
                        data: { id: id },
                        success: function ( resp )
                        {
                            reloadDT();
                        }
                    });
                }
            );
        }

        function reloadDT()
        {
            warehouseTable.ajax.reload();
            // loadKanbanCards();
        }

        function toggleSelectAll(checkbox)
        {
            if (checkbox.checked == true) {
                warehouseTable.rows().select();
            } else {
                warehouseTable.rows().deselect();
            }
        }

    $(document).ready(function() {
        reloadDT();
    });

</script>

{% endblock scripts %}