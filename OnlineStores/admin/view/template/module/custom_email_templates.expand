
{% extends "base.expand" %}

{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}

{% block title %}
{{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
{{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block headelements %}
{% endblock headelements %}

{% block secondarymenu %}
    {% include 'module/custom_email_templates/menu.expand' with {'expand': '#custom_email_template', 'active': '#template'} %}
{% endblock secondarymenu %}

{% block content %}
    <!-- Template list data table -->
    <div class="col-md-12">
        <!-- Advanced legend -->
        <div class="panel panel-flat">
            <div class="collapse in" id="panel-language">
                <table id="datatable-language" class="table table-hover datatable-highlight">
                     <thead>
                          <tr>
                            <th>{{ lang('column_group') }}</th>
                            <th>{{ lang('column_name') }}</th>
                            <th>{{ lang('column_code') }}</th>
                            <th>{{ lang('column_status') }}</th>
                            <th></th>
                          </tr>
                     </thead>
                </table>

            </div>
        </div>
        <!-- /a legend -->
    </div>
    <!-- End of Template list data table -->

    <div id="dialog-template-preview" class="modal fade ">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h5 class="modal-title">{{ lang('text_template_preview') }}</h5>
                </div>
                <div class="modal-body">
                    <iframe frameborder="0"></iframe>
                </div>
            </div>
        </div>
    </div>
{% endblock content %}

{% block scripts %}
    {{ parent() }}
    {% import _self as dtControls %}
    <script>
    $(document).ready(function() {
        $('select').select2();
        $('.touchspinney').TouchSpin({
            'postfix': '{{ current_currency_code }}',
            'decimals': 2,
        });
         $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"fB><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            // "dom": '<"top"i>rt<"bottom"flp><"clear">',
            language: locales['dt_language'],
            lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, "All"] ]
        });
    });

    var dt;
    $(document).ready(function() {

        dt = $('#datatable-language').DataTable({
            processing: true,
            serverSide: true,
            stateSave: true,
            language: locales['dt_language'],
            rowId: "template_id",
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            "ajax": {
                url: "{{ link('module/custom_email_templates/dtTemplateHandler') }}" ,
                type: "post",
                data:{
                    'date':$('#date_all').val()
                },
                error: function (data) {  // error handling
                    $("#datatable-language-error").html(" ");
                    $("#datatable-language").append('<tbody id="datatable-language-error"><tr><th colspan="6">No data found in the server</th></tr></tbody>');
                    $("#datatable-language_processing").css("display", "none");
                }
            },
            buttons: [
                {
                    extend: 'collection',
                    text: '<i class="icon-drawer-out"></i>',
                    className: 'btn btn-default btn-export',
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            text: locales['buttons']['copy'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csvHtml5',
                            text: locales['buttons']['export2csv'],
                            fieldSeparator: ',',
                            extension: '.csv',
                            bom: "true",
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            text: locales['buttons']['export2excel'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            text: locales['buttons']['export2pdf'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        }
                    ]
                },
                {
                    extend: 'colvis',
                    text: '<i class="icon-grid3"></i>',
                    className: 'btn btn-default btn-colvis',
                    columns: [1,2,3,4]
                }
            ],

            columns: [
                {
                    data: 'tab_name',
                },
                {
                    data: 'name',
                },
                {
                    data: 'code',
                },
                {
                    data: "status",
                    render: function(data, whatever, row) {
                        if ( row['status'] == '1') {
                            return '<span class="label label-success">' + row['status_text'] + '</span>';
                        } else {
                            return '<span class="label label-danger">' + row['status_text'] + '</span>';
                        }
                    }
                },
            ],
            "order": [[1, "asc"]],
             columnDefs: [
                {
                    targets:[0,1,2,3],
                    orderable: false
                },
                {
                    targets: [4],
                    orderable: false,
                    render: function (data, type, row) {
                        var li_s;
                        if(row['code'] == "" && row['tab_name'] == 'Mail')
                            li_s=`<li><a href='{{add}}' ><i class='far fa-add'></i> ${locales['button_add']}</a></li>`;
                        else
                            li_s=`<li><a href="{{link('module/custom_email_templates/edit')}}?code=`+row['code']+row['url']+`" ><i class='far fa-edit'></i> ${locales['button_edit']}</a></li>`;

                        if(row['template_id'] != '')
                            li_s+=`<li><a id="button-template-preview" data-template-id="`+ row['template_id']+ `" ><i class='fa fa-eye'></i> ${locales['button_view']}</a></li>`;

                        return `<ul class="icons-list pull-right">
                                <li class="dropdown">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                        <i class="icon-menu9"></i>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-right">
                                    `+li_s+`
                                    </ul>
                                </li>
                            </ul>
                        `;
                    }
                }

            ]
        });

        $(".btn-export").attr({
            "data-popup": "tooltip",
            "title": locales['button_export']
        });
        $(".btn-colvis").attr({
            "data-popup": "tooltip",
            "title": locales['button_colvis']
        });

        $('[data-popup="tooltip"]').tooltip();

        // On each draw, loop over the `detailRows` array and show any child rows
        dt.on('draw', function () {
            $(".switch").bootstrapSwitch();
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });


        $('.dataTables_length select').select2({
            minimumResultsForSearch: Infinity,
            width: 'auto'
        });
        $(".styled, .multiselect-container input").uniform({
            radioClass: 'choice'
        });
    });

    function reloadDT() {
        dt.ajax.reload();
    }

    function toggleSelectAll(checkbox) {
        if (checkbox.checked == true) {
            dt.rows().select();
        } else {
            dt.rows().deselect();
        }
    }
    $(document).delegate('#button-template-preview', 'click', function() {
    	obj = $(this);

    	if (typeof obj.data('history-id') !== 'undefined') {
    		id = obj.data('history-id');
    		type = 'history';
    	} else if (typeof obj.data('template-id') !== 'undefined') {
    		id = obj.data('template-id');
    		type = 'template';
    	} else {
    		return false;
    	}
    	$('#dialog-template-preview').find('iframe').attr({
    		'src': '{{ link("module/custom_email_templates/preview")}}?&format=raw&type=' + type + '&id=' + id,
    		'width': '{{ iframe_width }}',
    		'height': '400'
    	});

    	$('#dialog-template-preview').modal('show');
    });
</script>
{% endblock scripts %}