{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}

{% block title %}
    {{ lang('heading_title', 'module/auctions') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'module/auctions/side_menu.expand' with {'expand': '#auctions', 'active': '#auctions'} %}
{% endblock secondarymenu %}

{% block headelements %}
  <span class="headLinksEffect">
      <a href="{{ link('sale/auction/create', '', 'SSL') }}" class="btn btn-success btn-labeled btn-xs"><b><i class="icon-plus3"></i></b> {{ lang('btn_new_auction') }}</a>
  </span>
  <style>
    .dataTable tbody .select-checkbox:before{
        margin-left: -6px !important;
    }

    #auctions-datatable  > td.text-center > ul > li > ul

    .datatable-scroll-wrap .dropdown.open .dropdown-menu ,.open > .dropdown-menu{
        display: flex !important;
    }
    .datatable-scroll-wrap .dropdown.open .dropdown-menu li a {
        display: flex !important;
    }
    #auctions-datatable tbody tr:last-child{
        border-collapse: collapse !important;
        border-bottom: 1px solid #ddd !important;
    }
    #auctions-datatable{
        border-collapse: collapse;
    }
  </style>
{% endblock headelements %}

{% block content %}
<div class="row">
  <div class="col-md-12">
        <div class="tab-pane fade in active" id="gridView">
            <div class="panel panel-default">
                <div class="collapse in">
                    <table id="auctions-datatable" class="table table-hover datatable-highlight" style="width:100%">
                        <thead>
                            <tr>
                                <th></th>

                                <th style="min-width: 200px">{{ lang('column_product_name') }}</th>
                                <th>{{ lang('column_starting_price') }}</th>
                                <th>{{ lang('column_increment') }}</th>
                                <th>{{ lang('column_start_datetime') }}</th>
                                <th>{{ lang('column_close_datetime') }}</th>
                                <th>{{ lang('column_auction_status') }}</th>
                                <th>{{ lang('column_biding_status') }}</th>
                                <th>{{ lang('column_min_deposit') }}</th>

                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
  </div>
</div>
{% endblock %}

{% block scripts %}
  <script type="text/javascript">

  var data = JSON.parse('{{ auctions|json_encode|e('js') }}');

  $(document).ready(function () {

      $.extend(true, $.fn.dataTable.defaults, {
          autoWidth : false,
          dom       : '<"datatable-header"fB><"datatable-scroll-wrap"t><"datatable-footer"lip>',
          language  : locales['dt_language'],
          lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
      });

      var table = $('#auctions-datatable').DataTable({

          data: data,
          // scrollX: true,

          select: {
              style: 'multi',
              selector: 'td:first-child'
          },

          buttons: [
              {
                  text: "<i class='icon-trash'></i>",
                  className: 'btn btn-default bulk-delete disabled',
                  action: function (e, dt, node, config) {
                      var selectedRows = dt.rows('.selected').data();
                      var selectedIds = [];
                      selectedRows.each(function (item) {
                          selectedIds.push(item.auction_id);
                      });
                      if (selectedIds.length > 0) {
                          confirmMessage(function () {
                              $.ajax({
                                  url: '{{ link('sale/auction/delete') }}',
                                  type: 'post',
                                  data: {selected: selectedIds},
                                  success: function (resp) {
                                      var response = JSON.parse(resp);

                                      if (response.success == '1')
                                      {
                                          notify('Success', 'success', response.success_msg);
                                          dt.rows('.selected').remove().draw();
                                      }
                                      else
                                      {
                                          notify("{{ lang('error') }}", 'warning', response.error);
                                      }
                                  }
                              });
                          });
                      }
                  }
              },
              {
                  extend: 'collection',
                  text: '<i class="icon-drawer-out"></i>',
                  className: 'btn btn-default btn-export',
                  buttons: [
                      {
                          extend: 'copyHtml5',
                          text: locales['buttons']['copy'],
                          exportOptions: {
                              columns: ':visible'
                          }
                      },
                      {
                          extend: 'csvHtml5',
                          text: locales['buttons']['export2csv'],
                          fieldSeparator: ',',
                          extension: '.csv',
                          bom: "true",
                          exportOptions: {
                              columns: ':visible'
                          }
                      },
                      {
                          extend: 'excelHtml5',
                          text: locales['buttons']['export2excel'],
                          exportOptions: {
                              columns: ':visible'
                          }
                      },
                      {
                          extend: 'pdfHtml5',
                          text: locales['buttons']['export2pdf'],
                          exportOptions: {
                              columns: ':visible'
                          }
                      }
                  ]
              },
              {
                  extend: 'colvis',
                  text: '<i class="icon-grid3"></i>',
                  className: 'btn btn-default btn-colvis',
                  columns: [1,2,3, 4, 5, 6, 7, 8]
              }
          ],
          order: [[1, "asc"]],
          columns: [
              {
                  title: `<input type="checkbox" class="styled" id="toggleSelectAll">`,
                  orderable: false,
                  data: "auction_id",
                  width: "50px",
                  // render: function(data, type, row) {
                  //    return `<input type="checkbox" row-id="${row['auction_id']}" class="select-checkbox">`;
                  // }
              },
              {
                data: 'product_name',
                render: function (data, type, row) {
                      return `<a target="_blank" href='{{ link("catalog/product/update") }}?product_id=`+ row['product_id'] +`'>${row['product_name']}</a>`;
                  }
            },
            {data: 'starting_bid_price'},
            {data: 'increment'},
            {data: 'start_datetime'},
            {data: 'close_datetime'},
            {data: 'auction_status'},
            {data: 'bidding_status'},
            {data: 'min_deposit'},
          ],
          columnDefs: [
              {
                  orderable: false,
                  className: 'select-checkbox',
                  targets: 0
              },

              {
                  orderable: true,
                  className: 'sortable',
                  targets: [1, 2, 3, 4, 5, 6, 7, 8]
              },
              {
                  targets: 9,
                  render: function (data, type, row) {
                      return `<ul class="icons-list pull-right">
                              <li class="dropdown">
                                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                      <i class="icon-menu9"></i>
                                  </a>
                                  <ul class="dropdown-menu dropdown-menu-right" style="z-index:9999;">
                                      <li><a href='{{ link("sale/auction/edit") }}?auction_id=`+ row['auction_id'] +`'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                      <li><a class='removeItem' data-rowid="` + row['auction_id'] + `"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                  </ul>
                              </li>
                          </ul>
                      `;
                  }
              }
          ],
      });

      $(".bulk-delete").attr({
          "data-popup": "tooltip",
          "title": locales['button_delete']
      });
      $(".btn-export").attr({
          "data-popup": "tooltip",
          "title": locales['button_export']
      });
      $(".btn-colvis").attr({
          "data-popup": "tooltip",
          "title": locales['button_colvis']
      });

      $('[data-popup="tooltip"]').tooltip();

      $(".styled, .multiselect-container input").uniform({
          radioClass: 'choice'
      });

      $('select').select2({
          minimumResultsForSearch: Infinity,
          width: 'auto'
      });

      table.on('select', function (e, objDT, type, indexes) {
          if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
          else $(".bulk-delete").addClass('disabled');
      }).on('deselect', function (e, objDT, type, indexes) {
          if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
          else $(".bulk-delete").addClass('disabled');
      }).on('search.dt', function (e, objDT) {
          if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
          else $(".bulk-delete").addClass('disabled');
      });

      $('#toggleSelectAll').click(function () {
          var checkbox = this;
          if (checkbox.checked == true) {
              table.rows().select();
          } else {
              table.rows().deselect();
          }
      });

      $('.removeItem').click(function () {

          var that = $(this);
          var rowId = that.data('rowid');

          confirmMessage(function () {
              ajax("{{ link("sale/auction/delete") }}", {selected: [rowId]}, function (res) {
                  var response = JSON.parse(res);

                  if (response.success == '1')
                  {
                      table.row(that.parents('tr')).remove().draw();
                      notify('Success', 'success', response.success_msg);
                  }
                  else
                  {
                      notify("{{ lang('error') }}", 'warning', response.error);
                  }
              });
          });
      });
  });

    </script>
{% endblock %}
