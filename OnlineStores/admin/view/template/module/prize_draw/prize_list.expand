{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% import 'controls/uploader.expand' as uploader %}
{% set dualMenuEnabled = true %}

{% block title %}
    {{ lang('prize_draw_heading_Stitle', 'module/prize_draw') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'module/prize_draw/prize_draw_menu.expand' with {'expand': '#prize_draw', 'active': '#prizes'} %}
{% endblock secondarymenu %}

{% block headelements %}
    <a class="btn btn-success btn-labeled btn-xs" href="{{ link('module/prize_draw/insert') }}"><b><i class="icon-plus3"></i></b>{{ lang('button_add_prize') }}</a>
{% endblock headelements %}

{% block content %}
<form action="" class="form" method="post" enctype="multipart/form-data">
  <div class="tab-content" style="padding-left: 0">
      <div class="panel panel-default">
          <div class="collapse in">
              <table id="datatableGrid" class="table table-hover datatable-highlight">
                  <thead>
                  <tr>
                      <th></th>
                      <th>{{ lang('column_title') }}</th>
                      <th>{{ lang('column_sdate') }}</th>
                      <th>{{ lang('column_edate') }}</th>
                      <th>{{ lang('column_image') }}</th>
                      <th>{{ lang('column_status') }}</th>
                      <th></th>
                  </tr>
                  </thead>
              </table>
          </div>
      </div>
  </div>
</form>

    <!-- Products assing modal -->
    <!-- <div id="assingProducts" class="modal fade" role="dialog" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">{{ text_assign_out_spl }}</h4>
                </div>
                <div class="modal-body" style="padding-bottom: 45px;">
                    <hr style="margin-top: 0;">
                    <input type="hidden" value="" id="mass-assign-ids">
                    <div class="row">
                        <div class="col-md-12" style="border-right: 1px solid #999;">
                            <h4 style="margin-top: 0;">{{ text_outlets }}</h4>
                            <select name="products" id="products" class="select form-control" multiple>

                                {% for product in products %}
                                <option value="{{ product['product_id'] }}">{{ product['name'] }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    <hr style="margin-bottom: 0;">
                    <div class="assig-progress" style="text-align: center;padding-top: 10px;"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">{{ button_close }}</button>
                    <input type="button" onclick="assignProducts()" class="btn btn-primary" value="{{ button_assign }}">
                </div>
            </div>
        </div>
    </div>
    <button class="btn btn-info hide" id="showModalassign" data-toggle="modal" data-target="#assingProducts"><i class="fa fa-eye"></i></button>
    -->
{% endblock %}

{% block scripts %}

    {{ parent() }}

    {% import _self as dtControls %}

    <script>
        var table;
        $(document).ready(function () {
            $.extend($.fn.dataTable.defaults, {
                autoWidth: false,
                dom: '<"datatable-header"fB><"datatable-scroll"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
            });

            // Reorder events
            table = $('#datatableGrid').DataTable({
                language: locales['dt_language'],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                "ajax": {
                    url: '{{ link('module/prize_draw/dtHandler') }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [
                    /*{
                        text: `<i class='icon-touch'></i> {{ text_assign_out_spl }}`,
                        className: 'btn btn-default btn-mass-edit disabled',
                        action: function (e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            selectedIds = [];
                            selectedRows.each(function(item) {
                                selectedIds.push(item.id);
                            });
                            console.log(selectedIds);
                            $('#mass-assign-ids').val(selectedIds);
                            $('#showModalassign').trigger('click');
                        }
                    },*/
                    {
                        text: "<i class='icon-trash'></i>",
                        className: 'btn btn-default bulk-delete disabled',
                        action: function (e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function (item) {
                                selectedIds.push(item.id);
                            });
                            if (selectedIds.length > 0) {
                                confirmMessage(function () {
                                    $.ajax({
                                        url: '{{ link('module/prize_draw/dtDelete') }}',
                                        type: 'post',
                                        data: {id: selectedIds},
                                        success: function (resp) {
                                            var response = JSON.parse(resp);

                                            if (response.success == '1')
                                            {
                                                notify('Success', 'success', response.success_msg);
                                                dt.rows('.selected').remove().draw();
                                            }
                                            else
                                            {
                                                notify('error', 'warning', response.error);
                                                reloadDT();
                                            }
                                        }
                                    });
                                });
                            }
                        }
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="icon-grid3"></i>',
                        className: 'btn btn-default btn-colvis',
                        columns: [1,2,3]
                    }
                ],
                order: [[1, "asc"]],
                columns: [
                    {
                        title: `<input type="checkbox" class="styled" id="toggleSelectAll">`,
                        orderable: false,
                        data: "id",
                        width: "50px"
                    },
                    {
                        data: 'title',
                        render: function (data, type, row) {
                            return `<a href='{{ link("module/prize_draw/update") }}?prize_id=`+ row['id'] +`'>${row['title']}</a>`;
                        }
                    },
                    {data: 'start_date'},
                    {data: 'end_date'},
                    {data: 'image'},
                    {
                        data: 'status',
                        render: function(data, whatever, row) {
                            var status = (row['status'] == '1' || row['status'] == 1 ? 'checked="checked"' : '');
                            return `<div class="checkbox checkbox-switchery no-margin">
                                        <label>
                                            <input type="checkbox" data-on-text="{{ lang('text_enabled') }}" data-off-text="{{ lang('text_disabled') }}" onchange="changeStatus(${row['id']}, this.checked);" class="switchery" ` + status + `>
                                            <span class="switchery-status">` + (status ? '{{ lang('text_enabled') }}' : '{{ lang('text_disabled') }}') + `</span>
                                        </label>
                                    </div>`;
                        }
                    }
                ],
                columnDefs: [
                    {
                        orderable: false,
                        className: 'select-checkbox',
                        targets: 0
                    },
                    {
                        width: '30%',
                        targets: [1]
                    },
                    {
                        sortable: false,
                        searchable: false,
                        targets: [2]
                    },
                    {
                        sortable: false,
                        searchable: false,
                        targets: [3]
                    },
                    {
                        targets: [4],
                        orderable: false,
                        render: function (data, type, row) {
                            return bindImage(row.image);
                        }
                    },
                    {
                        targets: 6,
                        render: function (data, type, row) {
                            return `<ul class="icons-list pull-right">
                                    <li class="dropdown">
                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href='{{ link("module/prize_draw/update") }}?prize_id=`+ row['id'] +`'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                            <li><a class='removeItem' data-rowid="` + row['id'] + `"><i class='icon-trash'></i> ${locales['button_delete']}</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            `;
                        }
                    }
                ],
            });

            /*$(".btn-mass-edit").attr({
                "data-popup": "tooltip",
                "title": locales['button_mass_edit']
            });*/

            $(".bulk-delete").attr({
                "data-popup": "tooltip",
                "title": locales['button_delete']
            });

            $(".btn-colvis").attr({
                "data-popup": "tooltip",
                "title": locales['button_colvis']
            });

            $('[data-popup="tooltip"]').tooltip();


            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });

            // On each draw, loop over the `detailRows` array and show any child rows
            table.on('draw', function () {
                $(".switch").bootstrapSwitch();
                $(".styled, .multiselect-container input").uniform({
                    radioClass: 'choice'
                });

                if (Array.prototype.forEach) {
                    var elems = Array.prototype.slice.call(document.querySelectorAll('.switchery'));
                    elems.forEach(function(html) {
                        var switchery = new Switchery(html);
                        //debugger;
                    });
                }
                else {
                    var elems = document.querySelectorAll('.switchery');
                    for (var i = 0; i < elems.length; i++) {
                        var switchery = new Switchery(elems[i]);
                    }
                }
            });

            table.on('select', function (e, objDT, type, indexes) {
               /* if (table.rows('.selected').any()) $(".btn-mass-edit").removeClass('disabled');
                else $(".btn-mass-edit").addClass('disabled');*/

                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('deselect', function (e, objDT, type, indexes) {
                /*if (table.rows('.selected').any()) $(".btn-mass-edit").removeClass('disabled');
                else $(".btn-mass-edit").addClass('disabled');*/

                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            }).on('search.dt', function (e, objDT) {
               /* if (table.rows('.selected').any()) $(".btn-mass-edit").removeClass('disabled');
                else $(".btn-mass-edit").addClass('disabled');*/

                if (table.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
                else $(".bulk-delete").addClass('disabled');
            });

            $('#toggleSelectAll').click(function () {
                var checkbox = this;
                if (checkbox.checked == true) {
                    table.rows().select();
                } else {
                    table.rows().deselect();
                }
            });

            $('.removeItem').click(function () {

                var that = $(this);
                var rowId = that.data('rowid');

                confirmMessage(function () {
                    ajax("{{ link("module/prize_draw/dtDelete") }}", {selected: [rowId]}, function (res) {
                        var response = JSON.parse(res);

                        if (response.success == '1')
                        {
                            table.row(that.parents('tr')).remove().draw();
                            notify('Success', 'success', response.success_msg);
                        }
                        else
                        {
                            notify('error', 'warning', response.error);
                        }
                    });
                });
            });
        });
        function bindImage(image) {
            return '' +
                '<img src="' + image + '">'  +
                '';
        }

        function statusSwitch(id, status) {
            return `<div class="checkbox checkbox-switchery  no-margin">
                <label>
                    <input type="checkbox" data-on-text="sameh" data-off-text="Amr" onchange="changeStatus(` + id + `, this.checked);" class="switchery" ` + status + `>
                    <span class="switchery-status">` + (status ? locales['switch_text_enabled'] : locales['switch_text_disabled']) + `</span>
                </label>
            </div>`;
        }

        function changeStatus(id, status) {
            var newStatus = (status ? 1 : 0);
            $.ajax({
                url: 'module/prize_draw/dtUpdateStatus',
                data: {id: id, status: newStatus},
                dataType: 'JSON',
                method: 'POST',
                success: function (response) {
                    if (response.status == 'success') {
                        new PNotify({
                            title: response.title,
                            text: response.message,
                            addclass: 'bg-success stack-top-right',
                            stack: {"dir1": "down", "dir2": "right", "push": "top"}
                        });
                    } else {
                        for (error in response.errors) {
                            new PNotify({
                                title: response.title,
                                text: response.errors[error],
                                addclass: 'bg-danger stack-top-right',
                                stack: {"dir1": "down", "dir2": "right", "push": "top"}
                            });
                        }
                    }
                }
            });
        }

        function reloadDT() {
            table.ajax.reload();
        }

        /*function assignProducts() {
            $('.progress').css('display', 'block');
            var prize_ids = $('#mass-assign-ids').val();

            var product_ids = [];
            $.each($("#products option:selected"), function(){
                product_ids.push($(this).val());
            });

            if(prize_ids.length == 0 && product_ids.length == 0){
                $('.assig-progress').html('<span class="text-danger"><strong>{{ text_noselection }}</strong></span>');
            }else {
                $.ajax({
                    url: 'module/prize_draw/assignProducts',
                    type: 'post',
                    data: {prize_ids: prize_ids, product_ids: product_ids.join()},
                    dataType: 'json',
                    beforeSend: function () {
                        $('.assig-progress').html('<i class="fa fa-spin fa-spinner"></i>');
                    },
                    success: function(json) {

                    },
                }).done(function() {
                    $('.assig-progress').html('<span class="text-success"><strong>{{ text_success_ }}</strong></span>');
                });
            }

        }*/
    </script>
{% endblock scripts %}
