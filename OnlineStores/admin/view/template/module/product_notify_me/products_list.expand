{% extends "base.expand" %}
{% from "controls/breadcrumb.expand" import breadcrumb as breadcrumb %}
{% import "controls/forms.expand" as forms %}
{% set dualMenuEnabled = true %}

{% block title %}
    {{ lang('heading_title') }}
{% endblock title %}

{% block breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endblock breadcrumb %}

{% block secondarymenu %}
    {% include 'module/product_notify_me/menu.expand' with {'active': '#products'} %}
{% endblock secondarymenu %}


{% block content %}
<div class="container-detached">
  <div class="tab-pane fade in active" id="gridView">
      <div class="panel panel-default">
          <div class="collapse in">
              <table id="datatable-products" class="table table-hover datatable-highlight">
                  <thead>
                  <tr>
                      <th></th>
                      <th>{{ lang('column_product') }}</th>
                      <th>{{ lang('column_quantity') }}</th>
                      <th>{{ lang('column_erquests_count') }}</th>
                  </tr>
                  </thead>
              </table>
          </div>
      </div>
  </div>
</div>

{% endblock content %}

{% block scripts %}

<script>
    $(document).ready(function() {

        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });
    });

    var text_notify = "{{ lang('text_notify') }}";
    var productsTable;

    Array.prototype.remove = function(item)
    {
        // index will have -1 if item does not exist
        // else it will have the index of 1st item found in array
        var index = this.indexOf(item); 

        if (index > -1)
        {
            // splice() method is used to add/remove items(s) in array
            this.splice(index, 1); 
        }

        return index;
    }

    var selectedIds = [];
    $(document).ready(function(){
        productsTable = $('#datatable-products').DataTable({
                processing: true,
                serverSide: true,
                stateSave: true,
                rowId: "id",
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                dom: '<"datatable-header"Bf><"datatable-scroll-wrap"t><"datatable-footer"lip>',
                language: locales['dt_language'],
                "ajax": {
                    url: '{{ link('module/product_notify_me/pr_dtHandler') }}',
                    type: "post",
                    error: function (e,m,l) {
                        $(".datatables_country-error").html("");
                        $("#datatables_country").append('<tbody class="datatables_country-error"><tr><th colspan="3">No data found in the server</th></tr></tbody>');
                        $("#datatables_country_processing").css("display", "none");
                    }
                },
                buttons: [
                    {
                        text: "<i class='icon-envelope'></i>",
                        className: 'btn btn-default bulk-send',
                        action: function(e, dt, node, config) {
                            var selectedRows = dt.rows('.selected').data();
                            var selectedIds = [];
                            selectedRows.each(function(item) {
                                selectedIds.push(item.product_id);
                            });
                            if (selectedIds.length > 0){
                                $(".bulk-send").addClass('disabled');
                                $('#datatable-products').before('<div class="text-center loading" style="position: absolute;width: 100%;height: 100%;"><img src="view/image/blue-loading-gif-transparent-9.gif"  style="width: 100px" /></div>');
                                $.ajax({
                                    url: '{{ link('module/product_notify_me/dtSendNotify') }}',
                                    type: 'post',
                                    data: {pid: selectedIds},
                                    success: function(resp){
                                        var returnResult = JSON.parse(resp);
                                        if (returnResult.success == '1') {
                                            notify('', 'success', returnResult.success_msg);
                                        } else {
                                            var errors_list = '';
                                            for (err in returnResult.errors) {
                                                errors_list += '<li>'+returnResult.errors[err]+'</li>'
                                            }
                                            $('#error-area').append(
                                                '<div class="alert alert-danger alert-styled-left alert-bordered">' +
                                                '<button type="button" class="close" data-dismiss="alert">' +
                                                '<span>&times;</span>' +
                                                '<span class="sr-only">X</span>' +
                                                '</button>' + errors_list + '</div>'
                                            );
                                        }
                                        $(".bulk-send").removeClass('disabled');
                                        $('.loading').remove();
                                        reloadDT();
                                    }
                                });
                            }
                        }
                    }
                ],

                columns: [
                    {
                        title:`<input type="checkbox" class="styled" onchange='toggleSelectAll(this);'>`,
                        orderable: false,
                        width: "50px",
                        data: 'id',
                        render: function(data, type, row) {
                            return `<input type="checkbox" row-id="${row['id']}" class="select-checkbox">`;
                        }
                    },
                    {
                        data: "product_name",
                        render:function (data, type, row) {
                            return `<a href='{{ link('catalog/product/update?product_id=') }}${row['product_id']}'>${row['product_name']}</a>`;
                        }
                    },
                    {
                        data: "quantity"
                    },
                    {
                        data: "request_count",
                        render: function (data, type, row) {
                            return `<label class="label label-info">${row['request_count']}</label>`;
                        }
                    }
                ],
                order: [[1, "desc"]],
                columnDefs: [
                    {
                        targets: 2,
                        className: 'ltr text-left'
                    }
                ]
            });

            $(".bulk-send").attr({
                "data-popup": "tooltip",
                "title": text_notify
            });

            $('[data-popup="tooltip"]').tooltip();

           productsTable.on( 'select', function ( e, objDT, type, indexes ) {
                if ( productsTable.rows( '.selected' ).any() )
                {
                    $(".bulk-send").removeClass('disabled');
                }
                else
                {
                    $(".bulk-send").addClass('disabled');
                }

            })
            .on( 'deselect', function ( e, objDT, type, indexes ) {
                if ( productsTable.rows( '.selected' ).any() )
                {
                    $(".bulk-send").removeClass('disabled');
                }
                else
                {
                    $(".bulk-send").addClass('disabled');

                }
            })
            .on( 'search.dt', function (e, objDT) {
                if ( productsTable.rows( '.selected' ).any() )
                {
                    $(".bulk-send").removeClass('disabled');
                }
                else
                {
                    $(".bulk-send").addClass('disabled');
                }
            });

            $('.dataTables_length select').select2({
                minimumResultsForSearch: Infinity,
                width: 'auto'
            });
            $(".styled, .multiselect-container input").uniform({
                radioClass: 'choice'
            });
        });


        function reloadDT()
        {
            productsTable.ajax.reload();
        }

        function toggleSelectAll(checkbox)
        {
            if (checkbox.checked == true) {
                productsTable.rows().select();
            } else {
                productsTable.rows().deselect();
            }
        }

    $(document).ready(function() {
        reloadDT();
    });
</script>

{% endblock scripts %}