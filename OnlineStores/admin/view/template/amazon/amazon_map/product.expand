{% block headelements %}

    {# <a href="{{ import_product_tab }}" id="import-product-tab" title="{{ button_import_amazon_product }}" class="btn btn-info"><i class="fa fa-download" aria-hidden="true"></i> {{ lang('button_import_amazon_product') }}</a>
    <a href="{{ export_product_tab }}" id="export-product-tab" title="{{ button_export }}" class="btn btn-info"><i class="fa fa-upload" aria-hidden="true"></i> {{ lang('button_export') }}</a> #}
        
{% endblock headelements %}

<div class="col-md-12">
    <!-- Advanced legend -->
    <div class="features-table-container">
        <div class="collapse in" id="feed-panel">
            <table id="dt_product" class="table table-hover datatable-highlight">
                <thead>
                <tr>
                    <th></th>
                    <th>{{ lang('column_oc_product_id') }}</th>
                    <th>{{ lang('column_product_name') }}</th>
                    <th>{{ lang('column_amazon_product_asin') }}</th>
                    <th>{{ lang('column_sync_source') }}</th>
                    <th>{{ lang('column_price') }}</th>
                    <th>{{ lang('column_quantity') }}</th>
                    <th>{{ lang('column_map') }}</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
</div> <!-- col-md-12 -->

<div id="content">
<link href="view/stylesheet/csspin.css" rel="stylesheet" type="text/css"/>
<style type="text/css">
  .datatable-scroll{
      overflow-x: scroll;
  }
  .ui-front{
      z-index:9999;
  }
.cp-round::before, .cp-round::after{
  width: 35px;
  left:8px;
  height: 35px;
  margin-top: 25px;
}
.btn-success{
  background-color:#6ABD6A;
  color:#FFF;
  border-style: solid;
  border-width: 1px;
  border-color: #6ABD6A;
  border-bottom-width: 3px;
}
.btn-success:hover{
  background-color:#e6e6e6;
  color:#333;
  border-style: solid;
  border-width: 1px;
  border-color: #adadad;
  border-bottom-width: 3px;
}
.product_import_section, #profiler_product, #profiler_product_export, #combination_section, #selected_export{
  display: none;
}
#update_export_opt .dropdown-item{
  display: block;
  width: 100%;
  padding: .25rem 1.5rem;
  clear: both;
  font-weight: 400;
  color: #212529;
  text-align: inherit;
  white-space: nowrap;
  background: 0 0;
  border: 0;
}
#update_export_opt .table-responsive{
  overflow-x: visible;
}
</style>


      <div class="modal fade map_duplicate_product" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title" id="map_duplicate_id"><strong>{{ lang('text_map_product') }}</strong></h4>
            </div>
            <div class="modal-body">
              <div class="map-product-error"> </div>
              <form id="form-map_product"  class="form-horizontal" method="post" enctype="multipart/form-data" >
              <div class="form-group">
                <label class="control-label" for="input-opencart-product-id">{{ lang('column_product_name') }}</label>
                  <input type="text" name="opencart_product_name"  id="input-opencart-product-id" class="form-control"/>
                  <input type="hidden" name="opencart_product_id">
                  <input type="hidden" name="product_map_id">
                  <input type="hidden" name="opencart_map_product_id">
              </div>

            </div>
            <div class="modal-footer">
              <span class="demo-spin" style="color: #1e91cf;position: relative;top: 6px;"><i class="fa  fa-spin fa-2x fa-fw"></i></span>
              <a  class="btn btn-primary"  onclick="map_product();">{{ lang('button_map_product') }}</a>
              <button type="button" class="btn btn-default" data-dismiss="modal">{{ lang('button_close') }}</button>
          </form>
            </div>

          </div>
        </div>
      </div>

{% block scripts %}
<script>
    var dt;
    var text_map_product = '{{ lang("text_map_product") }}';
    var text_variation_list = ' {{ lang("text_variation_list") }}' ;
    $(document).ready(function() {

        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"fB><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });
        dt = $('#dt_product').DataTable({
            processing: true,
            serverSide: true,
            stateSave: false,
            language: {
                ...locales['dt_language'],
                search: ''
            },
            autoWidth: false,
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]],
            ajax: {
                url: "{{ link('amazon/amazon_map/product/dtHandler') }}",
                type: 'POST',
            },
            buttons: [
                {
                    text: "<i class='icon-trash'></i>",
                    className: 'btn btn-default bulk-delete disabled',
                    action: function (e, dt, node, config) {
                        var selectedRows = dt.rows('.selected').data();
                        var selectedIds = [];
                        selectedRows.each(function (item) {
                            selectedIds.push(item.map_id);
                        });
                        if (selectedIds.length > 0) {
                            confirmMessage(function () {
                                $.ajax({
                                    url: '{{ link('amazon/amazon_map/product/deleteMapProduct') }}',
                                    type: 'post',
                                    data: {account_id: '{{account_id}}', selected: selectedIds},
                                    success: function () {
                                        reloadDT();
                                    }
                                });
                            });
                        }
                    }
                },
                {
                    extend: 'collection',
                    text: '<i class="icon-drawer-out"></i>',
                    className: 'btn btn-default btn-export',
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            text: locales['buttons']['copy'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csvHtml5',
                            text: locales['buttons']['export2csv'],
                            fieldSeparator: ',',
                            extension: '.csv',
                            bom: "true",
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            text: locales['buttons']['export2excel'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            text: locales['buttons']['export2pdf'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        }
                    ]
                },
                {
                    extend: 'colvis',
                    text: '<i class="icon-grid3"></i>',
                    className: 'btn btn-default btn-colvis',
                    columns: [1, 2, 3,4,5,6,7]
                },
            ],

            
            columnDefs:[
                {
                    targets: 0,
                    orderable: false,
                    className: 'select-checkbox',
                    
                },{
                  targets: 2,
                  render: function(data, type, row){
                    component = `<div class="col-sm-12">${row['product_name']}</div>`;

                    if(row['option_values'].length != 0){
                      component+=`<div class="dropdown pull-right">
                          <button class="btn btn-info dropdown-toggle" type="button" id="dropdownMenuVariation" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            `+ text_variation_list + `
                            <span class="caret"></span>
                          </button>
                          <ul class="dropdown-menu" aria-labelledby="dropdownMenuVariation">`;
                          for(i=0;i<row['option_values'].length;i++){
                            component +="<li style='padding:5px 15px; cursor:pointer;'>"+row['option_values'][i]['name']+" - ('"+row['option_values'][i]['asin']+"')'</li>";
                          }
                          component+=`</ul></div>`;
                    }
                    return component;
                    
                  }
                },{
                  targets: 4,
                  render: function(data, type, row){
                    component = `<button class="btn btn-`;
                    
                    if(row['source'] != "" && row['source'] == 'Amazon Item')
                    { 
                      component +='warning'; 
                    }
                    else{ 
                      component +='info'; 
                    } 
                    
                    component += ` type="button"> ${row['source']}</button>`;

                    return component;
                    
                  }
                },
                {
                  targets: 7,
                  orderable: false,
                  render: function (data, type, row) {
                    
                    component =  
                        `<ul class="icons-list pull-right">
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="icon-menu9"></i>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-right">`;
                                if(row['source'] == 'Amazon Item'){
                                    component += `<li>
                                        <a onclick="openModel_map_product('${row['map_id']}','${row['oc_product_id']}')">
                                            <i class='fa fa-eye'></i> ${text_map_product}
                                        </a>
                                    </li>`;              
                                }    
                                component +=`<li>
                                            <a onclick="removeItem(${row['map_id']})">
                                            <i class='icon-trash'></i> ${locales['button_delete']}
                                            </a>
                                        </li>`;
                                
                    component+=`</ul>
                            </li>
                        </ul>`;
                    
                    return component;
                  }
                }
            ],
            columns: [
                {
                    title: `<input type="checkbox" class="select-checkbox" onchange='toggleSelectAll(this);'>`,
                    data: "map_id",
                },
                {data: "oc_product_id"},
                {data: "product_name"},
                {data: "amazon_product_asin"},
                {data: "source"},
                {   
                   data: "price"
                },
                {   
                   data: "quantity"
                },
            ],
        });

        $('.dt-buttons').append(`<a href="{{ import_product_tab }}" id="import-product-tab" title="{{ button_import_amazon_product }}" class="btn btn-info"><i class="fa fa-download" aria-hidden="true"></i> {{ lang('button_import_amazon_product') }}</a>`)
        $('.dt-buttons').append(`<a href="{{ export_product_tab }}" id="export-product-tab" title="{{ button_export }}" class="btn btn-info"><i class="fa fa-upload" aria-hidden="true"></i> {{ lang('button_export') }}</a>`)

        $('[data-popup="tooltip"]').tooltip();
        
        $(".bulk-delete").attr({
            "data-popup": "tooltip",
            "title": locales['button_delete']
        });
        
        $(".btn-export").attr({
            "data-popup": "tooltip",
            "title": locales['button_export']
        });
        
        $(".btn-colvis").attr({
            "data-popup": "tooltip",
            "title": locales['button_colvis']
        });
        
        dt.on('select', function (e, objDT, type, indexes) {
            if (dt.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        })
        .on('deselect', function (e, objDT, type, indexes) {
            if (dt.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        })
        .on('search.dt', function (e, objDT) {
            if (dt.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        });

    });
    function toggleSelectAll(checkbox) {
        if (checkbox.checked == true) {
            dt.rows().select();
        } else {
            dt.rows().deselect();
        }
    }

    function removeItem(id) {
        //alert(clientId);
        confirmMessage(function () {
            ajax("{{ link("amazon/amazon_map/product/deleteMapProduct") }}", {account_id: '{{account_id}}', selected: [id]}, function (res) {
                reloadDT();
            });
        });
    }

    function reloadDT() {
        dt.ajax.reload();
    }


</script>
<script type="text/javascript"><!--
function filter_map_product() {
	url = 'index.php?route=amazon_map/account/edit&token=<?php echo $token; ?>&account_id=<?php echo $account_id; ?>&status=account_product_map';

  var filter_oc_product_id = $('input[name=\'filter_oc_product_id\']').val();

  if (filter_oc_product_id) {
    url += '&filter_oc_product_id=' + encodeURIComponent(filter_oc_product_id);
  }

	var filter_oc_product_name = $('input[name=\'filter_oc_product_name\']').val();

	if (filter_oc_product_name) {
		url += '&filter_oc_product_name=' + encodeURIComponent(filter_oc_product_name);
	}

  var filter_amazon_product_id = $('input[name=\'filter_amazon_product_id\']').val();

  if (filter_amazon_product_id) {
    url += '&filter_amazon_product_id=' + encodeURIComponent(filter_amazon_product_id);
  }

  var filter_source_sync = $('select[name=\'filter_source_sync\']').val();

	if (filter_source_sync != '*') {
		url += '&filter_source_sync=' + encodeURIComponent(filter_source_sync);
	}

	var filter_price = $('input[name=\'filter_price\']').val();

	if (filter_price) {
		url += '&filter_price=' + encodeURIComponent(filter_price);
	}

  var filter_quantity = $('input[name=\'filter_quantity\']').val();

  if (filter_quantity) {
    url += '&filter_quantity=' + encodeURIComponent(filter_quantity);
  }

	location = url;
}

$(document).ready(function(){
    $('input[name=\'opencart_product_name\']').autocomplete({
    delay: 0,
    source: function(request, response) {
        $.ajax({
            url: '{{ link("amazon/amazon_map/product/get_map_product_list") }}?account_id={{ account_id }}&opencart_product_name=' +  encodeURIComponent(request['term'])+'&opencart_map_product_id='+$('input[name=\'opencart_map_product_id\']').val(),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                return {
                    label: item.name,
                    value: item.item_id
                }
                }));
            }
            });
        },
        select: function(event,item) {
            event.preventDefault();
            $('input[name=\'opencart_product_name\']').val(item.item.label);
            $('input[name=\'opencart_product_id\']').val(item.item.value);
            return false;
        },
        focus: function(item) {
            return false;
        }
    });

})
$('input[name=\'filter_oc_product_name\']').autocomplete({
  delay: 0,
  source: function(request, response) {
    $.ajax({
      url: 'index.php?route=amazon_map/product/autocomplete&token=<?php echo $token; ?>&account_id=<?php echo $account_id; ?>&filter_oc_product_name=' +  encodeURIComponent(request),
      dataType: 'json',
      success: function(json) {
        response($.map(json, function(item) {
          return {
            label: item.name,
            value: item.item_id
          }
        }));
      }
    });
  },
  select: function(item) {
    $('input[name=\'filter_oc_product_name\']').val(item.label);
    return false;
  },
  focus: function(item) {
      return false;
  }
});

//--></script>

<script type="text/javascript">
    $('#generate_report_id').on('click',function(){
        $.ajax({
          url: 'index.php?route=amazon_map/product/generate_report_id&token=<?php echo $token; ?>&account_id=<?php echo $account_id; ?>',
          dataType:'json',
          type:'POST',
          cache: false,
          beforeSend: function() {
            $('.block_div').css('display','block');
          },
          complete: function() {
            $('.block_div').css('display','none');
          },
          success: function(json) {
            if (json['error']) {
              html = '<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i>  '+ json['error']+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
              $('#generate-report-section').prepend(html);
            }
            if (json['success']){
              $('#generate-report-section .alert').remove();
              html = '<div class="alert alert-success"><i class="fa fa-exclamation-circle"></i>  '+ json['success']['message']+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
              $('#generate-report-section').prepend(html);
              $('#generate_report_id').css('display','none');
              $('.product_import_section').css('display','block');
            }
            if(json['redirect']){
              location  = json['redirect'];
            }
          },
          error: function(xhr, ajaxOptions, thrownError) {
            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
          }
        });
    });
</script>

<script type="text/javascript">
    // update/delete the exported product(s) at the amazon store
    var updateRequests    = []; var totalpages = 0; var totalUpdated = 0;
    var start_page    = 1;
    var error_report  = false;
    $(".update_export_start").on("click", function(e){
        e.preventDefault();
        var getExportOption = $(this).attr('id');
        var formData1       = new FormData($('#update_export_opt')[0]);
                              formData1.append('export_option', getExportOption);
        if (typeof timerSet != 'undefined') {
            clearInterval(timerSet);
        }
        timerSet = setInterval(function() {
                clearInterval(timerSet);
        // Reset everything
        $('.alert').remove();
        $('#progress-bar-updateDeleteProduct').css('width', '0%');
        $('#progress-bar-updateDeleteProduct').removeClass('progress-bar-danger progress-bar-success');
        $('#progress-text-updateDeleteProduct').html('');

          jQuery.ajax({
              url: 'index.php?route=amazon_map/product/opration_export_product&token=<?php echo $token; ?>&page='+start_page,
              data: formData1,
              dataType:'json',
              type:'POST',
              cache: false,
              contentType: false,
              processData: false,
              beforeSend: function() {
                $('.block_div').css('display','block');
                $('#product_export_list_section, #UpdateDeleteResult').find('.text-danger, .alert').remove();
              },
              complete: function() {
                NextUpdateDeleteStep();
              },
              success: function(jsonResponse) {
                  if (jsonResponse.error_failed) {
                      error_report = true;
                      $('#progress-bar-updateDeleteProduct').addClass('progress-bar-danger');
                      $('#progress-text-updateDeleteProduct').html('<div class="text-danger">' + jsonResponse.error_failed + '</div>');
                      $('#UpdateDeleteResult #sync_result').append('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonResponse.error_failed+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                  }else{
                      error_report = false;
                      if (jsonResponse.error) {
                        var html = '';
                        for (i in jsonResponse.error) {
                            html += '<div class="alert alert-danger"><i class="fa fa-times" aria-hidden="true"></i>   '+jsonResponse.error[i]+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                        }
                        $('#UpdateDeleteResult #sync_result').append(html);
                        $('#progress-text-updateDeleteProduct').html('<div class="text-danger"> Warning: '+jsonResponse.error.length+' products failed to '+getExportOption+'d at amazon store!</div>');
                      }
                      if (jsonResponse.success) {
                        var html1 = '';
                        for (i in jsonResponse.success) {
                          html1 += '<div class="alert alert-success"><i class="fa fa-check-circle-o" aria-hidden="true"></i>  '+jsonResponse.success[i]+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                        }
                        totalUpdated = totalUpdated + jsonResponse.success.length;
                        $('#UpdateDeleteResult #sync_result').append(html1);
                        $('#progress-text-updateDeleteProduct').html('<div class="text-success"> '+jsonResponse.success.length+' products '+getExportOption+'d to amazon store successfully!</div>');
                      }
                      if(jsonResponse.totalpages){
                          totalpages = jsonResponse.totalpages;
                          for(start_page = 2; start_page < totalpages; start_page++) {
                              updateRequests.push({
                                  url: 'index.php?route=amazon_map/product/opration_export_product&token=<?php echo $token; ?>&page='+start_page,
                                  data: formData1,
                                  dataType:'json',
                                  type:'POST',
                                  cache: false,
                                  contentType: false,
                                  processData: false,
                                  success :   function(json_response){
                                      if (json_response.error) {
                                        var html = '';
                                        for (i in json_response.error) {
                                            html += '<div class="alert alert-danger"><i class="fa fa-times" aria-hidden="true"></i>   '+json_response.error[i]+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                                        }
                                        $('#UpdateDeleteResult #sync_result').append(html);
                                        $('#progress-text-updateDeleteProduct').html('<div class="text-danger"> Warning: '+json_response.error.length+' products failed to '+getExportOption+'d at amazon store!</div>');
                                      }
                                      if (json_response.success) {
                                        var html1 = '';
                                        for (i in json_response.success) {
                                          html1 += '<div class="alert alert-success"><i class="fa fa-check-circle-o" aria-hidden="true"></i>  '+json_response.success[i]+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                                        }
                                        totalUpdated = totalUpdated + json_response.success.length;
                                        $('#UpdateDeleteResult #sync_result').append(html1);
                                        $('#progress-text-updateDeleteProduct').html('<div class="text-success"> '+json_response.success.length+' products '+getExportOption+'d to amazon store successfully!</div>');
                                      }
                                  },
                              });
                          }

                      }
                  }
              },
              error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
              }
          });
        }, 500);
    })

    var NextUpdateDeleteStep = function(){
        if (updateRequests.length) {
            $('#progress-bar-updateDeleteProduct').css('width', (100 - (updateRequests.length / totalpages) * 100) + '%');
            $.ajax(updateRequests.shift()).then(NextUpdateDeleteStep);
        } else {
            $('#progress-bar-updateDeleteProduct').css('width', '100%');
            if(totalUpdated != 0){
                $('#progress-text-updateDeleteProduct').html('<div class="text-success"><?php echo "Total '+totalUpdated+' products updated/deleted to amazon store from opencart store, check show result!" ?></div>');
                $('#progress-bar-updateDeleteProduct').addClass('progress-bar-success');
            }else{
                if(!error_report){
                    $('#progress-text-updateDeleteProduct').html('<div class="text-danger"><?php echo "Total '+totalUpdated+' products updated/deleted to amazon store from opencart store, check show result!" ?></div>');
                }
                $('#progress-bar-updateDeleteProduct').addClass('progress-bar-danger');
            }
            $('.block_div').css('display','none');
        }
    };
</script>

<script type="text/javascript">
// ********** Amazon product import section **********
  $('#import_update_product').on('click', function(e){
      $.ajax({
          url     : 'index.php?route=amazon_map/product/getProductReport&token=<?php echo $token; ?>',
          data: {
            'account_id' : '<?php echo $account_id; ?>',
          },
          dataType:'json',
          type:'POST',
          beforeSend: function() {
            $('#profiler_product .profiler_product_body, #generate-report-section').find('.alert').remove();
            $('#progress-bar-importproduct').removeClass('progress-bar-danger progress-bar-success');
            $('.block_div, #profiler_product').css('display','block');
            $('.block_div').css('display','block');
            $('.container-fluid > .alert').remove();
          },
          complete:function() {
              $('.block_div').css('display','none');
              $('#progress-bar-importproduct').css('width', '100%');
              $('#create_import_product').prop('disabled',false);
              $('#import_update_one_by_one').prop('disabled',false);
          },
          success: function(jsonAmazonPro) {
              if (jsonAmazonPro.error) {
                  $('#progress-bar-importproduct').addClass('progress-bar-danger');
                  $('#progress-text-importproduct').html('<div class="text-danger">' + jsonAmazonPro.error + '</div>');
                  $('#profiler_product').append('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
              }else{
                  if(jsonAmazonPro.data && jsonAmazonPro.message){
                    $('#progress-bar-importproduct').addClass('progress-bar-success');
                    $('#profiler_product .profiler_product_body').append('<div class="alert alert-success"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.message+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    $('#progress-text-importproduct').html('<div class="text-success"> '+jsonAmazonPro.message+' </div>');
                    $('#create_import_product').attr('data-total', jsonAmazonPro.total_product);
                  }
              }
          },
        })
  })


function checkFeedStatus(feed_id) {
       var html = '';
      $.ajax({
          url     : 'index.php?route=amazon_map/product/checkFeedStatus&token=<?php echo $token; ?>',
          data: {
            'account_id' : '<?php echo $account_id; ?>',
            'feed_id'    : feed_id
          },
          dataType:'json',
          type:'POST',
          beforeSend: function() {

            $('.block_div, #profiler_product').css('display','block');
            $('.block_div').css('display','block');

          },
          complete:function() {
              $('.block_div').css('display','none');

          },
          success: function(response) {
            if(response['error']){

            html += ' <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+response['comment']+'<button type="button" class="close" data-dismiss="alert">&times;</button></div>';
            $('.feed_html').html(html);
            $('.feed_status_id').modal('show');
            } else {

             html += ' <div class="alert alert-success"><b> <?php echo $FeedProcessingStatus; ?> :</b> '+response[0]['getFeedProcessingStatus'];
              html += '<b><br><?php echo $SubmittedDate; ?> : </b> '+response[0]['getSubmittedDate']['date'];
             html += '<br><b><?php echo $StartedProcessingDate; ?> :</b> '+response[0]['getStartedProcessingDate']['date'];
            html +='</div>';
             $('.feed_html').html(html);
             $('.feed_status_id').modal('show');
            }
        }
      });
  }
  // Suppose any product already Opencart cart store and amazon also end then if you import product then same product list two times so avoid this issue we map the product
  function openModel_map_product(map_id, map_product_id) {
    $('input[name=\'opencart_product_name\']').val('');
    $('input[name=\'opencart_product_id\']').val('');
    $('.map-product-error').html('');
    $('input[name=\'opencart_map_product_id\']').val(map_product_id);
    $('input[name=\'product_map_id\']').val(map_id);
    $('.map_duplicate_product').modal('show');
  }
   function map_product() {
       
       $('.map-product-error').html('');
     if($('input[name=\'opencart_product_id\']').val()!='')
     {

        var formData      = new FormData($('#form-map_product')[0]);
        formData.append('account_id', '{{ account_id }}');

      $.ajax({
            url     : '{{ link("amazon/amazon_map/product/map_product_with_existing_product")}}',
            data: formData,
            dataType:'json',
            type:'POST',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function() {

              $('.block_div, #profiler_product').css('display','block');
              $('.block_div').css('display','block');

            },
            complete:function() {
                $('.block_div').css('display','none');

            },
            success: function(response) {
             if(response) {
                $('.map_duplicate_product').modal('hide');
             } else {
                  $('.map-product-error').html('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i><?php echo "Something wrong!!"; ?><button type="button" class="close" data-dismiss="alert">&times;</button></div>');
             }
           }
      })
    } else {
          $('.map-product-error').html('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i><?php echo $map_product_error; ?><button type="button" class="close" data-dismiss="alert">&times;</button></div>');
    }
   }
</script>

<script type="text/javascript">
// ********** Amazon product create/update section **********
  var importRequests    = []; var totalImportProduct = 0; var import_total = 0;
  var count  = 1;
  $('#create_import_product').on('click', function(e){
      e.preventDefault();
      totalImportProduct = import_total = 0;
      import_total = $('#create_import_product').attr('data-total');
      if (typeof timer != 'undefined') {
          clearInterval(timer);
      }
      timer = setInterval(function() {
              clearInterval(timer);
      // Reset everything
      $('.alert').remove();
      $('#progress-bar-importproduct').css('width', '0%');
      $('#progress-bar-importproduct').removeClass('progress-bar-danger progress-bar-success');
      $('#progress-text-importproduct').html('<div class="text-info text-left"><?php echo $text_currently_import; ?></div>');

      $.ajax({
          url     : 'index.php?route=amazon_map/product/createProduct&token=<?php echo $token; ?>',
          data: {
            'account_id' : '<?php echo $account_id; ?>',
            'count'      : count,
          },
          dataType:'json',
          type:'POST',
          beforeSend: function() {
            $('#profiler_product .profiler_product_body, #generate-report-section').find('.alert').remove();
            $('.block_div').css('display','block');
            $('.container-fluid > .alert').remove();
          },
          complete:function() {
              NextImportStep();
          },
          success: function(jsonAmazonPro) {
                if (jsonAmazonPro.error_failed) {
                    if(jsonAmazonPro.error_failed.status && jsonAmazonPro.error_failed.status == 'complete'){
                        $('#progress-bar-importproduct').addClass('progress-bar-success');
                        $('#progress-text-importproduct').html('<div class="text-danger">' + jsonAmazonPro.error_failed.message + '</div>');
                        $('#profiler_product .profiler_product_body').append('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error_failed.message+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    }else{
                        $('#progress-bar-importproduct').addClass('progress-bar-danger');
                        $('#progress-text-importproduct').html('<div class="text-danger">' + jsonAmazonPro.error_failed + '</div>');
                        $('#profiler_product .profiler_product_body').append('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error_failed+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    }
                }else{
                    if(jsonAmazonPro.error){
                        html = '<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                        $('#profiler_product .profiler_product_body').append(html);
                    }
                    if(jsonAmazonPro.success){
                        html = '<div class="alert alert-success"><i class="fa fa-check-circle"></i> '+jsonAmazonPro.success+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                        $('#profiler_product .profiler_product_body').append(html);
                        totalImportProduct = totalImportProduct + 1;
                    }

                    for(count = 2; count <= import_total; count++) {
                        importRequests.push({
                            url     : 'index.php?route=amazon_map/product/createProduct&token=<?php echo $token; ?>',
                            data: {
                              'account_id' : '<?php echo $account_id; ?>',
                              'count'      : count,
                            },
                            dataType:'json',
                            type:'POST',
                            success :   function(json_response){
                                if(json_response.error){
                                    html = '<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+json_response.error+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                                    $('#profiler_product .profiler_product_body').append(html);
                                }
                                if(json_response.success){
                                    html = '<div class="alert alert-success"><i class="fa fa-check-circle"></i> '+json_response.success+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                                    $('#profiler_product .profiler_product_body').append(html);
                                    totalImportProduct = totalImportProduct + 1;
                                }
                            }
                        });
                    }
                }
              },
              error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
              }
          });
      }, 600);
  });

  var NextImportStep = function(){
      if (importRequests.length) {
          $('#progress-bar-importproduct').css('width', (100 - (importRequests.length / import_total) * 100) + '%');
          $.ajax(importRequests.shift()).then(NextImportStep);
      } else {
          $('#progress-bar-importproduct').css('width', '100%');
          if(totalImportProduct != 0){
              $('#progress-text-importproduct').html('<div class="text-success"><?php echo "Total '+totalImportProduct+' amazon products imported to opencart store from amazon store!" ?></div>');
              $('#progress-bar-importproduct').addClass('progress-bar-success');
          }else{
              $('#progress-text-importproduct').html('<div class="text-danger"><?php echo "Total '+totalImportProduct+' amazon products imported to opencart store from amazon store!" ?></div>');
              $('#progress-bar-importproduct').addClass('progress-bar-danger');
          }
          $('#generate-report-section').append('<div class="alert alert-success"><i class="fa fa-check-circle"></i> <?php echo "Total '+totalImportProduct+' amazon products imported to opencart store from amazon store!" ?> <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
          $('#generate-report-section').append('<div class="alert alert-info"><i class="fa fa-check-circle"></i> Finished Execution <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
          $('.block_div').css('display','none');
      }
  };
</script>

<script type="text/javascript">
   $( ".asin_model input[name='amazon_product_asin']" ).keyup(function() {
      $(".asin_model input[name='amazon_product_asin']").parent().removeClass('has-error');
      $(".asin_model").find('.text-danger').remove();
      var getASIN = $(this).val();
      var regex = new RegExp("^[A-Z0-9]+$");

      if(getASIN.length == 0 || (getASIN.length > 0 && getASIN.length < 10 && regex.test(getASIN))){
        $(".asin_model input[name='amazon_product_asin']").parent().removeClass('has-error');
        $(".asin_model input[name='amazon_product_asin']").parent().removeClass('has-success');
        $(".asin_model").find('.text-danger').remove();
      }else if(getASIN.length == 10 && regex.test(getASIN)){
        $(".asin_model input[name='amazon_product_asin']").parent().addClass('has-success');
      }else if (!regex.test(getASIN)) {
        $(".asin_model input[name='amazon_product_asin']").parent().addClass('has-error');
        $(".asin_model input[name='amazon_product_asin']").parent().parent().append('<div class="text-danger"><?php echo $error_wrong_asinformat; ?></div>');
      }
  });
  // ********** Amazon product create/update section by ASIN **********
  $('#import_by_asin').on('click',  function(){
    $(".asin_model input[name='amazon_product_asin']").parent().removeClass('.has-error');
    $(".asin_model").find('.text-danger').remove();
    var getASIN = $(".asin_model input[name='amazon_product_asin']").val();
    if((getASIN.length == 10) && getASIN.match(/((^[A-Z]+)|(^[0-9]+)|(^[0-9]+[A-Z]+)|(^[A-Z]+[0-9]+))+[0-9A-Z]+$/)){
      $.ajax({
        url     : 'index.php?route=amazon_map/product/createProduct&token=<?php echo $token; ?>',
        data    : {
          'account_id'  : '<?php echo $account_id; ?>',
          'product_asin': getASIN,
          'count'        : 1,
        },
        dataType: 'json',
        type    : 'POST',
        beforeSend: function() {
          $("input[name='amazon_product_asin'] ").parent().parent().find('.alert').remove();
          $('.block_div').css('display','block');
          $(".asin_model").find('.alert-danger').remove();
          $(".demo-spin > .fa").addClass('fa-cog');
        },
        complete: function() {
          $('.block_div').css('display','none');
          $(".asin_model input[name='amazon_product_asin']").val('');
          $(".demo-spin > .fa").removeClass('fa-cog');
        },
        success: function(jsonAmazonPro) {
                if (jsonAmazonPro.error_failed) {
                    if(jsonAmazonPro.error_failed.status && jsonAmazonPro.error_failed.status == 'complete'){
                        $('#info_asin').parent().append('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error_failed.message+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    }else{
                        $('#info_asin').parent().append('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error_failed+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    }
                }else{
                    if(jsonAmazonPro.error){
                        html = '<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> '+jsonAmazonPro.error+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                        $('#info_asin').parent().append(html);
                    }
                    if(jsonAmazonPro.success){
                        html = '<div class="alert alert-success"><i class="fa fa-check-circle"></i> '+jsonAmazonPro.success+' <button type="button" class="close" data-dismiss="alert">&times;</button></div>';
                        $('#info_asin').parent().append(html);
                    }
                }
        },
        error: function(xhr, ajaxOptions, thrownError) {
          alert(thrownError + " " + xhr.statusText + " " + xhr.responseText);
        }
      });
    }else {
      $(".asin_model input[name='amazon_product_asin']").parent().addClass('.has-error');
      $(".asin_model input[name='amazon_product_asin']").parent().parent().append('<div class="text-danger"><?php echo $error_wrong_asinformat; ?></div>');
      $(".asin_model").find('.alert-danger').remove();
    }
  })
</script>
{% endblock %}