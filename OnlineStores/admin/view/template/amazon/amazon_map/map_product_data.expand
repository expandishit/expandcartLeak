

  <div class="col-md-12">
      <!-- Advanced legend -->
      <div class="features-table-container">
          <div class="collapse in" id="feed-panel">
              <table id="dt_product" class="table table-hover datatable-highlight">
                  <thead>
                  <tr>
                      <th></th>
                      <th>{{ lang('column_name') }}</th>
                      <th>{{ lang('column_category_name') }}</th>
                      <th>{{ lang('column_price') }}</th>
                      <th>{{ lang('column_quantity') }}</th>
                      <th>{{ lang('column_action') }}</th>
                
                  </tr>
                  </thead>
              </table>
          </div>
      </div>
  </div> <!-- col-md-12 -->
{% block scripts %}
<script>
    var dt;
    var add_txt = "{{ lang('text_add') }}";
    $(document).ready(function() {
        $.extend($.fn.dataTable.defaults, {
            autoWidth: false,
            dom: '<"datatable-header"fB><"datatable-scroll-wrap"t><"datatable-footer"lip>',
            language: locales['dt_language'],
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]]
        });
        dt = $('#dt_product').DataTable({
            processing: true,
            serverSide: true,
            stateSave: false,
            language: {
                ...locales['dt_language'],
                search: ''
            },
            autoWidth: false,
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            lengthMenu: [[10, 25, 50, 100, 200], [10, 25, 50, 100, 200]],
            ajax: {
                url: "{{ link('amazon/amazon_map/map_product_data/dtHandler') }}",
                type: 'POST',
            },
            buttons: [
                {
                    text: "<i class='icon-trash'></i>",
                    className: 'btn btn-default bulk-delete disabled',
                    action: function (e, dt, node, config) {
                        var selectedRows = dt.rows('.selected').data();
                        var selectedIds = [];
                        selectedRows.each(function (item) {
                            selectedIds.push(item.account_id);
                        });
                        if (selectedIds.length > 0) {
                            confirmMessage(function () {
                                $.ajax({
                                    url: '{{ link('amazon/amazon_map/account/dtDelete') }}',
                                    type: 'post',
                                    data: {ids: selectedIds},
                                    success: function () {
                                        reloadDT();
                                    }
                                });
                            });
                        }
                    },
                },
                {
                    extend: 'colvis',
                    text: '<i class="icon-grid3"></i>',
                    className: 'btn btn-default btn-colvis',
                    columns: [1, 2, 3,4]
                },
                {
                    extend: 'collection',
                    text: '<i class="icon-drawer-out"></i>',
                    className: 'btn btn-default btn-export',
                    buttons: [
                        {
                            extend: 'copyHtml5',
                            text: locales['buttons']['copy'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'csvHtml5',
                            text: locales['buttons']['export2csv'],
                            fieldSeparator: ',',
                            extension: '.csv',
                            bom: "true",
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            text: locales['buttons']['export2excel'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            text: locales['buttons']['export2pdf'],
                            exportOptions: {
                                columns: ':visible'
                            }
                        }
                    ]
                },
            ],
            columnDefs:[
                {
                    targets: 0,
                    orderable: false,
                    className: 'select-checkbox',
                    
                },{
                targets: 5,
                orderable: false,
                render: function (data, type, row) {
                    return `<ul class="icons-list pull-right">
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="icon-menu9"></i>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-right">
                                    <li><a href='{{ link('amazon/amazon_map/map_product_data/add')}}?product_id=${row['oc_product_id']}'><i class='fa fa-plus'></i> ${add_txt}</a></li>                     
                                    <li><a href='{{ link('amazon/amazon_map/map_product_data/edit')}}?product_id=${row['oc_product_id']}'><i class='icon-pencil7'></i> ${locales['button_edit']}</a></li>
                                </ul>
                            </li>
                        </ul>
                    `;
                }
            }],
            columns: [
                {
                    title: `<input type="checkbox" class="select-checkbox" onchange='toggleSelectAll(this);'>`,
                    data: "oc_product_id",
                },
                {data: "name"},
                {data: "category"},
                {data: "price"},
                {data: "quantity"},
            ],
        });
        $('.dt-buttons').append(`<a href="{{ import_product }}" class="btn btn-default" data-popup="tooltip" data-placement="top" title=" {{ lang('button_import') }}"><i class="icon-drawer-in"></i></a>`)
        $('.dt-buttons').append(`<a href="{{ add }}" title="{{ text_add }}" class="btn btn-primary">{{ lang('text_add') }}</a>`)
        
        $('[data-popup="tooltip"]').tooltip();

        $(".btn-export").attr({
            "data-popup": "tooltip",
            "title": locales['button_export']
        });
        
        $(".btn-colvis").attr({
            "data-popup": "tooltip",
            "title": locales['button_colvis']
        });
        
        dt.on('select', function (e, objDT, type, indexes) {
            if (dt.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        })
        .on('deselect', function (e, objDT, type, indexes) {
            if (dt.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        })
        .on('search.dt', function (e, objDT) {
            if (dt.rows('.selected').any()) $(".bulk-delete").removeClass('disabled');
            else $(".bulk-delete").addClass('disabled');
        });

        
    });
    function toggleSelectAll(checkbox) {
        if (checkbox.checked == true) {
            dt.rows().select();
        } else {
            dt.rows().deselect();
        }
    }
    function reloadDT() {
        dt.ajax.reload();
    }


</script>
<script type="text/javascript">
$('#button-filter').on('click', function() {
var url = 'index.php?route=amazon_map/map_product_data&token=<?php echo $token; ?>';

var filter_name = $('input[name=\'filter_name\']').val();

if (filter_name) {
  url += '&filter_name=' + encodeURIComponent(filter_name);
}

var category_name = $('input[name=\'category_name\']').val();

if (category_name) {
  url += '&category_name=' + encodeURIComponent(category_name);
}



location = url;
});
$('#button-reset').on('click', function() {
  var url = 'index.php?route=amazon_map/map_product_data&token=<?php echo $token; ?>';
  location = url;
});

$('input[name=\'filter_name\']').autocomplete({
	'source': function(request, response) {
		$.ajax({
			url: 'index.php?route=amazon_map/map_product_data/autocompleteMapdata&token=<?php echo $token; ?>&filter_name=' +  encodeURIComponent(request),
			dataType: 'json',
			success: function(json) {
				response($.map(json, function(item) {
					return {
						label: item['name'],
						value: item['product_id']
					}
				}));
			}
		});
	},
	'select': function(item) {
		$('input[name=\'filter_name\']').val(item['label']);


	}
});
$('input[name=\'category_name\']').autocomplete({
  delay: 0,
  source: function(request, response) {
    $.ajax({
      url: 'index.php?route=amazon_map/map_product_data/autocompleteCategory&token=<?php echo $token; ?>&account_id=<?php echo $account_id; ?>&category_name=' +  encodeURIComponent(request),
      dataType: 'json',
      success: function(json) {
        response($.map(json, function(item) {
          return {
            label: item.name,
            value: item.item_id
          }
        }));
      }
    });
  },
  select: function(item) {
    $('input[name=\'category_name\']').val(item.label);
    return false;
  },
  focus: function(item) {
      return false;
  }
});

</script>

{% endblock %}