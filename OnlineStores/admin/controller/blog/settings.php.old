<?php

class ControllerFlashBlogSettings extends Controller
{
    private $settings;

    private function init($models)
    {
        foreach ($models as $model) {
            $this->load->model($model);
            $object = explode('/', $model);
            $object = end($object);
            $model = str_replace('/', '_', $model);
            $this->$object = $this->{"model_" . $model};
        }

        if (isset($this->session->data['errors'])) {
            $this->data['error_warning'] = implode('</br >', $this->session->data['errors']);

            unset($this->session->data['errors']);
        }

        if (isset($this->session->data['success'])) {
            $this->data['success'] = $this->session->data['success'];

            unset($this->session->data['success']);
        }

        $this->language->load('flash_blog/flash_blog');
    }

    public function index()
    {
        $this->init([
            'flash_blog/settings'
        ]);

        if (isset($this->request->post['flash_blog'])) {
            $data['settings'] = $this->request->post['flash_blog'];
        } elseif ($this->config->get('flash_blog')) {
            $data['settings'] = $this->config->get('flash_blog');
        } else {
            $data['settings'] = null;
        }

        $this->document->setTitle($this->language->get('flash_blog_heading_title'));

        $data['breadcrumbs'] = array();

        $data['breadcrumbs'][] = array(
            'text'      => $this->language->get('text_home'),
            'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),
            'separator' => false
        );

        $data['breadcrumbs'][] = array(
            'text'      => $this->language->get('flash_blog_heading_title'),
            'href'      => $this->url->link('flash_blog/home', 'token=' . $this->session->data['token'], 'SSL'),
            'separator' => ' :: '
        );

        $this->template = 'flash_blog/settings.tpl';
        $this->children = array(
            'common/header',
            'common/footer',
        );

        $data['links'] = [
            'submit' => $this->url->link(
                'flash_blog/settings/updateSettings',
                'token=' . $this->session->data['token'],
                'SSL'
            ),
            'cancel' => $this->url->link('flash_blog/home', 'token=' . $this->session->data['token'], 'SSL'),
        ];

        $data['currency'] = $this->config->get('config_currency');

        $this->data = array_merge($data, $this->data);

        $this->response->setOutput($this->render());
    }

    public function updateSettings()
    {
        if (
            $this->request->server['REQUEST_METHOD'] != 'POST' || !isset($_POST)
        ) {
            return 'error';
        }

        $this->init([
            'flash_blog/settings'
        ]);

        $data = $this->request->post['flash_blog'];

        if ($this->settings->validate($data) !== true) {

            if (count($this->settings->errors) > 0) {
                $this->session->data['errors'] = $this->settings->errors;
            }

            $this->redirect(
                $this->url->link(
                    'flash_blog/settings',
                    'token=' . $this->session->data['token'],
                    'SSL'
                )
            );
        }

        $this->settings->updateSettings(['flash_blog' => $data]);

        $this->session->data['success'] = $this->language->get('text_settings_success');

        $this->redirect(
            $this->url->link(
                'flash_blog/settings',
                'token=' . $this->session->data['token'],
                'SSL'
            )
        );
    }
}
